<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: career | Practical Elegance]]></title>
  <link href="http://decomplecting.org/blog/categories/career/atom.xml" rel="self"/>
  <link href="http://decomplecting.org/"/>
  <updated>2014-03-11T23:01:43-04:00</updated>
  <id>http://decomplecting.org/</id>
  <author>
    <name><![CDATA[Jason Lewis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Passion, The Ultimate Virtue]]></title>
    <link href="http://decomplecting.org/blog/2012/05/22/passion/"/>
    <updated>2012-05-22T20:04:00-04:00</updated>
    <id>http://decomplecting.org/blog/2012/05/22/passion</id>
    <content type="html"><![CDATA[<p>I&rsquo;m finally reading <a href="http://www.chadfowler.com">Chad Fowler</a>&rsquo;s excellent book, <a href="http://pragprog.com/book/cfcar2/the-passionate-programmer">The Passionate Programmer</a>, and in it he recounts an experience that was chillingly familiar.</p>

<p>A music major, Chad fell into working at his university&rsquo;s IT department as if by accident. Initially, he was worried that his lack of professional experience or training would prove an embarrassment; after all, here he was working alongside people with advanced degrees in computer science.</p>

<blockquote><p>Within a few days of work, the truth started to sink in. These people don&rsquo;t know what the hell they&rsquo;re doing! In fact, some people were watching me work and taking notes! People with master&rsquo;s degrees in computer science!</p></blockquote>

<p><img class="float-left" src="/images/passionate-programmer.png"></p>

<p>I can definitely relate. I work at a university as well, and it&rsquo;s actually my first formal software development position. I&rsquo;ve been coding as part of my job (and my full-time hobby) for years&hellip; as far back as high school, in fact. I learned BASIC on a Texas Instruments 99/4A when I was 4 or 5. But prior to this, my paid software development work had either been freelance stuff or encountering a problem in a non-technical job that I could solve faster by hacking something together.</p>

<p>I work on a small team on which I&rsquo;m the only full-time developer (I&rsquo;ll come back to this later). Recently, IT had a major re-org which put my team under a new director and in the same organizational unit as a large team of developers.</p>

<!-- more -->


<p>At first, I was super-excited&hellip; to actually have other developers I could at least bounce ideas off of? What a windfall! Then I found out our new director used to be a programmer herself! Fantastic!</p>

<p>Our director actually is pretty fantastic, but my na√Øve illusions about these other developers were soon dispelled.</p>

<h2>Meet the developers</h2>

<p>Shortly after the re-org, I started working a day a week at the campus where most of IT is centered rather than the main university campus where I usually work. At first it was okay; everyone I met seemed nice enough, and they had better coffee than the break room back at my usual location.</p>

<p>I think it was maybe the second time I went up there, I was eating lunch with some of of the devs from our new sister team, some of whom I was meeting for the first time. The conversation went something like this:</p>

<p>Let&rsquo;s call my interlocutor Al.</p>

<hr />

<p><strong>Me:</strong> Hi, I&rsquo;m Jason.</p>

<p><strong>Al:</strong> Hi Jason, I&rsquo;m Al. So what do you do?</p>

<p><strong>Me:</strong> Oh, I&rsquo;m on the ID Services team. I mostly work on custom web apps to interface with our legacy systems, but I&rsquo;m starting to do some Android stuff as well.</p>

<p><strong>Al:</strong> That&rsquo;s neat. I work on $some_project. So what do you do for fun?</p>

<p><strong>Me:</strong> I read a lot, and hack on open source projects as much as I can. I&rsquo;m actually also working on teaching myself Lisp right now.</p>

<p><strong>Al:</strong> Uh-huh. And what do you do with your other hand?</p>

<hr />

<p>Okay, for a moment I was almost speechless. Then I thought: <em>Okay, maybe I pegged this guy wrong as a developer. Business analyst, maybe?</em></p>

<p>Nope. This was a developer who (apparently?) hated programming. He basically said as much. Maybe not hated, but took no joy in it.</p>

<p>This was actually pretty typical of many other developers I met up there. Not all, of course. There were a few gems amongst the stones.</p>

<p>Suffice to say, I lost interest in being in that environment pretty quickly. So when I moved later that year, I wasn&rsquo;t too upset that the difficulty of commuting to that campus made it impractical to work from there on a regular basis.</p>

<p>I&rsquo;m not sure I realized it at the time, but I think the attitude toward coding I saw in those developers is <em>absolutely</em> reflected in their product.</p>

<p>It&rsquo;s a mission-critical enterprise system which, to be fair, does its job effectively. But certainly <em>not</em> elegantly.</p>

<p>Like many projects here (and I&rsquo;m sure it&rsquo;s not atypical of higher ed in general), that team works on a legacy, vendor-supplied product that has been customized, extended, and tweaked beyond recognition.</p>

<p>My job isn&rsquo;t that different.</p>

<p>Except they have a team of 25 or so working on a project with a clunky, it&rsquo;s-obviously-ASP.NET web interface that users love to hate (actually, I think there&rsquo;s a lot of ASP classic, VB6, and other stuff going on behind the scenes, but I don&rsquo;t really want to know).</p>

<p>Actually, not just users&hellip; one of the first pieces of my predecessor&rsquo;s code I looked at had a number of comments about this system, because my team has to pull data from it. I&rsquo;ll call that system HORUS (not its real name) for the purposes of illustration.</p>

<p>``` perl horus-interface.pl</p>

<pre><code>my @data = horus_data();

# I'm going to stab HORUS in the face.

my $converter = Text::Iconv-&gt;new("LATIN1","UTF8");
$converter-&gt;set_attr("transliterate");

foreach my $record (@data) {
  # HORUS lies about UTF-16. It's actually UTF-8 sprinkled with high-bit ASCII chars. Ffs.
  $converter-&gt;convert($record);

}
</code></pre>

<p>```</p>

<p>The Perl is probably all wrong, but the comments are basically verbatim (other than the name, of course).</p>

<p>I&rsquo;m one guy, armed only with Ruby, Rails, and sheer bloody-mindedness. Well, not alone anymore; we recently added 40% of an FTE to our team. So we have 1.4 people on development now; that&rsquo;s a 40% increase in staff in one year! Unthinkable!</p>

<p>But, I digress.</p>

<h2>It&rsquo;s just a job</h2>

<p>I think it&rsquo;s easy to build a crap product when it&rsquo;s just a job. If I was given the choice between being associated with a crap product and finding a new job, I&rsquo;d be out the door; but apparently that&rsquo;s just me.</p>

<p>Dealing with legacy systems is hard, and often thankless. But it&rsquo;s no excuse. I think if you <em>love</em> code, and have a passion both for writing code, and for code that not only compiles and runs, but that is elegant, even beautiful, it&rsquo;s makes all the difference in the world.</p>

<p>Not that I don&rsquo;t have some skeletons in the closet. Or, at least, some crawling, eldritch horrors in the codebase. The first application I wrote, for administrative users, is something I&rsquo;ve been begging to rewrite, because I can&rsquo;t stand maintaining it. Someday that&rsquo;ll happen. Then I&rsquo;ll have decent test coverage and all the other things I wish I&rsquo;d done right the first time.</p>

<p>But the fact that (by my standards) a sloppy, poorly tested monstrosity is in production, and <em>I&rsquo;m</em> responsible for it&hellip; I literally lose sleep over this.</p>

<p>I don&rsquo;t think Al even thinks about how stable, orthogonal, or DRY his code is when he commits it, much less once it&rsquo;s been running in production for a year and only breaks down or corrupts data on edge cases.</p>

<p>It&rsquo;s not just that, though.</p>

<p>I will never trust a developer who only codes from 9 to 5. <em>Especially</em> one who works on an enterprise-y system. Enterprise-y systems are rarely fun. So if you don&rsquo;t get your programming jollies at work (or, if jollies are an occasional perk rather than a frequent occurrence), you&rsquo;ve got to get them hacking on an open source project, or some prototype for this crazy start-up you might do one day, right?</p>

<p>Unless you <em>don&rsquo;t get</em> jollies. At least, not from coding.</p>

<p>I don&rsquo;t understand how this can even be possible, but the evidence is overwhelming that there are people out there, working professionally as software developers, who don&rsquo;t care for it all that much.</p>

<p>I have a feeling that developer apathy is the root cause of a <em>lot</em> of bad software.</p>

<p>If you are truly passionate about building beautiful, reliable systems that solve real problems for real people, you don&rsquo;t work 9 to 5. You go home and hack on open source projects. Maybe just for fun, maybe to learn something new, maybe to scratch an itch. Perhaps it&rsquo;s a library you want to use at work, but it just needs one more feature to be a good fit.</p>

<p>You read blogs and mailing lists to stay on top of the latest developments in the languages and frameworks you use, so you can use them more effectively.</p>

<p>You learn new languages, and play with new frameworks, because it&rsquo;s fun, and it makes you better at what you do.</p>

<p>You learn a Lisp, or maybe Haskell, just because you heard it will be both challenging and rewarding.</p>

<p>You follow people like <a href="https://twitter.com/#!/chadfowler">@chadfowler</a>, <a href="https://twitter.com/#!/steveklabnik">@steveklabnik</a>, and <a href="https://twitter.com/#!/fogus">@fogus</a> on Twitter because you&rsquo;ll learn from them, be entertained, and interact with really, really smart people, even if in 140-character bursts.</p>

<p>You join a local user group, go to hackfests, seek out people who won&rsquo;t zone out when you wax poetic about how <em>fucking cool</em> Clojure is. Or whatever you&rsquo;re on about this week.</p>

<p>You get a lambda (inside parentheses!) tattooed on your forearm.</p>

<p>Okay, maybe that last one is just me.</p>

<p>You always try to be the worst guy in every band you&rsquo;re in.</p>

<h2>Being the worst</h2>

<p>This is probably the one thing that really chafes about my current job. Working on a team with 1.4 developers is hard enough; when you&rsquo;re the de facto lead developer, and fairly isolated in terms of problem domain, physical location, and platform, it&rsquo;s hard to find someone better to spot your WTFs, suggest refactorings, etc.</p>

<p>Working on open source projects helps, and there&rsquo;s always IRC, and <a href="http://stackoverflow.com">Stack Overflow</a>. The newer Stack Exchange site, <a href="http://codereview.stackexchange.com">Code Review</a>, as well as <a href="http://programmers.stackexchange.com">Programmers</a> are also fantastic resources.</p>

<p>Whether you&rsquo;re on a team with many senior developers, or a lone wolf, however, having mentors or resources available isn&rsquo;t enough. You have to care about your craft enough to take advantage of whatever is available, because improving your craft <em>matters.</em></p>

<h2>Virtues</h2>

<p>I used to do a lot of Perl coding. I taught myself Perl in high school, and it was probably one of the best things I ever did.</p>

<p><img class="float-right <a" src="href="http://imgs.xkcd.com/comics/11th_grade.png">http://imgs.xkcd.com/comics/11th_grade.png</a>"></p>

<p>I used Perl a lot, and though I never did fully grasp the full depth of references in Perl ( although that may actually <a href="https://sites.google.com/site/steveyegge2/ancient-languages-perl">be an indicator of sanity</a>), I loved certain things about the philosophy. Or, at least, the philosophy behind the philosophy. The idea that the chief virtues of a programmer were <a href="http://c2.com/cgi/wiki?LazinessImpatienceHubris">laziness, impatience, and hubris</a> struck a chord with me. If you read <a href="http://www.oreilly.com/catalog/pperl3/">Programming Perl</a>, a clear distinction is made between <em>true</em> laziness, impatience, and hubris, and a false, <em>shallow</em> laziness, impatience, and hubris. I think the true versions of these virtues stem from an even deeper virtue: passion.</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/Bz2-49q6DOI" frameborder="0" allowfullscreen></iframe>


<p>Passion is such a hackneyed concept nowadays that it has become almost meaningless. Which is maybe part of the reason I procrastinated for so long before picking up <em>The Passionate Programmer</em> (sorry, Chad!). But I think in a very real sense, what the best developers have in common is a true <em>passion</em> for writing code and building systems.</p>

<blockquote><p><strong>Passion</strong> (from the Ancient Greek verb œÄŒ¨œÉœáœâ (paskho) meaning to suffer) is a term applied to a very strong feeling about a person or thing. Passion is an intense emotion compelling feeling, enthusiasm, or desire for something.</p></blockquote>

<p>- <a href="" title="http://en.wikipedia.org/wiki/Passion_(emotion)">Wikipedia</a></p>

<p>I think those of us who truly care do <em>suffer</em> for our software. We drive ourselves mad hunting down <a href="http://www.catb.org/jargon/html/H/heisenbug.html">heisenbugs</a> and corner cases, stay up nights obsessively scratching this or that itch, lie awake mentally refactoring a junk-drawer class that has been bothering us for weeks, and even stay in jobs where we&rsquo;re underpaid and overworked (for a while, at least) just because we&rsquo;re given reasonable autonomy and the chance to hack on something really <em>cool.</em></p>

<h2>Conclusion</h2>

<p>We have enough mediocre developers. If we ever don&rsquo;t have a local surplus, there are plenty waiting in the wings. That&rsquo;s what off-shoring is for.</p>

<p>If you&rsquo;re thinking of learning to code because it seems like a solid career choice, rather than out of an inner compulsion, <a href="http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html">please don&rsquo;t</a>.</p>

<p>I love meeting programmers. I have far too many friends whose eyes glaze over when I talk about the cool tricks Clojure employs to get around the JVM&rsquo;s lack of tail-call optimization.</p>

<p>But when I meet someone who is actively creating software, who doesn&rsquo;t even express the slightest curiosity about virtual machines or tail recursion&hellip; it depresses the hell out of me.</p>

<p>Anyhow&hellip; go read Chad&rsquo;s book. And <em>love the hell out of</em> coding, or GTFO. There are plenty of jobs out there for you to hate; please stop diluting the overall quality of the world&rsquo;s software through sheer apathy.</p>

<p><strong>Update:</strong> As per usual, Paul Graham <a href="http://paulgraham.com/love.html">has this topic covered</a>. I just discovered his &ldquo;How To Do What You Love&rdquo; essay, however, so it&rsquo;s new to me. But you should read that, too.</p>
]]></content>
  </entry>
  
</feed>
