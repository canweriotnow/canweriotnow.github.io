<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: editors | Practical Elegance]]></title>
  <link href="http://decomplecting.org/blog/categories/editors/atom.xml" rel="self"/>
  <link href="http://decomplecting.org/"/>
  <updated>2014-11-30T06:54:34-05:00</updated>
  <id>http://decomplecting.org/</id>
  <author>
    <name><![CDATA[Jason Lewis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emacs: Down The Rabbit Hole]]></title>
    <link href="http://decomplecting.org/blog/2014/10/30/emacs-down-the-rabbit-hole/"/>
    <updated>2014-10-30T06:05:25-04:00</updated>
    <id>http://decomplecting.org/blog/2014/10/30/emacs-down-the-rabbit-hole</id>
    <content type="html"><![CDATA[<p>So I wrote <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">Welcome to The Dark Side: Switching to Emacs</a> in response to a tweet, but as any of my co-workers will attest, it doesn&rsquo;t take much to get me started on my Emacs workflow.</p>

<p>I feel like a religious convert&hellip; I miss those simple, unadorned Vim services but I&rsquo;m floored by the majesty of the stained glass and altar dressings and ritual of the Church of Emacs.</p>

<p>So before the jump, in the spirit of &ldquo;I&rsquo;ll show you mine if you show me yours,&rdquo; my <a href="https://github.com/canweriotnow/.emacs.d">.emacs.d</a>.</p>

<h2>An Unexpected Journey</h2>

<p>I lived in my happy little Vim hobbit hole, smoking my pipe and enjoying my brandy. It was not a dirty hole, or a sandy hole, but a hobbit hole, which means comfort.</p>

<p>One day, a wizard visted me.</p>

<p><img src="/images/post-img/mccarthy1.jpg" title="&lsquo;McCarthy at work at SAIL&rsquo;" ></p>

<p>And that&rsquo;s when things began to get weird&hellip;</p>

<!-- more -->


<p>Okay, so maybe I didn&rsquo;t receive a visit from the revenant spirit of John McCarthy, ghost of programming past, present and future. Or maybe I did.</p>

<p>Maybe Paul Graham just convinced me I was <a href="http://www.paulgraham.com/avg.html">coding in Blub</a>, for whatever value of Blub I happened to be using.</p>

<p>See, the thing about Blub is it&rsquo;s a mutable value. When you&rsquo;re using C++ and Java comes along, you realize C++ was actually Blub. When you&rsquo;re using Perl for your day-to-day and discover Python, and then Ruby, you realize that not only was Python Blub, but Perl was an even Blubbier Blub.</p>

<p>Ruby&hellip; oh, Ruby. I still love Ruby. But then something happened.</p>

<p>I need to backpedal a bit.</p>

<p>There&rsquo;s <em>using</em> a language, and then there&rsquo;s <em>building</em> something in it. I&rsquo;d played with Scheme (<a href="http://mitpress.mit.edu/sicp/">SICP</a> is wonderful), and even Common Lisp, and I knew enough to appreciate the Lisp-nature of Ruby which, when combined with its Smalltalk-nature, I thought made for hte perfect productive language.</p>

<p>But see, I was <em>building</em> things in Ruby while I was <em>playing</em> with Lisp.</p>

<p>Along comes Clojure.</p>

<p>I was working in a pretty isolated programming role that granted me a lot of de facto autonomy. So when I got a request for a new service, I thought &ldquo;why not Clojure?&rdquo;</p>

<p>We&rsquo;re in late 2012 here, so bear with me.</p>

<p>My first Clojure project ran like a champ, was hailed as an unqualified success. Eventually I even <a href="http://decomplecting.org/blog/2013/02/03/datetime-conversions-in-clojure/">blogged about</a> a piece of that project that handled datetimes.</p>

<p>Fast-forward to the present, I&rsquo;ve written Clojure in <a href="http://www.sublimetext.com/">Sublime Text</a>, <a href="https://atom.io/">Atom</a>, mostly <a href="http://www.vim.org/">Vim</a> with the help of some awesome plugins from <a href="https://github.com/tpope">Tim Pope</a>.</p>

<p>Like I <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">mentioned before</a>, I&rsquo;ve had a religious hatred for Emacs since the mid-1990s when I entered the *nix world and got involved in USENET.</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/freebsdgirl">@freebsdgirl</a> <a href="https://twitter.com/darkuncle">@darkuncle</a> &#8230;and on that day, war broke out, destroying the fragile peace that had been brokered so long ago.</p>&mdash; jason λewis (@canweriotnow) <a href="https://twitter.com/canweriotnow/status/527532324234489857">October 29, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>The war is far from over&hellip;</p>

<p>&hellip;but, I digress.</p>

<p>I started the <a href="http://www.meetup.com/Baltimore-Clojure/">Baltimore Clojure Meetup</a> and met more Emacs users than I had in one place in a long time. Again, I dismissed Emacs.</p>

<p>That is, until I found <a href="http://lighttable.com/">LightTable</a> completely b0rked again and threw up my hands.</p>

<p>Perhaps I shouldn&rsquo;t have eaten my hands to begin with&hellip; sorry, equivocation humor. Can&rsquo;t resist.</p>

<h2>Welcome to Emacs</h2>

<p>So yeah, I went over my starter packages in the <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">earlier post</a>, but I didn&rsquo;t talk about the full experience of discovery I underwent when I fully committed to emacs.</p>

<p>Sure, there&rsquo;s the whole <code>cider-mode</code> and <code>cider-jack-in</code> and <code>cider-nrepl</code> and even <code>cider-scratch</code> that make LightTable&rsquo;s inline evaluation modes look like child&rsquo;s play (no offense to Chris Granger, LightTable is beautiful, I love it, but&hellip; y&#8217;know, Emacs).</p>

<p>So I did those things, started with <a href="http://batsov.com/prelude/">Prelude</a>, added all the Clojure fun I could find, and got to work.</p>

<p>I also subscribed to <a href="http://www.reddit.com/r/emacs">/r/emacs</a>, and did a little reading on the <a href="http://www.emacswiki.org/emacs/">Emacs Wiki</a>.</p>

<p>Have you ever been comfortably reading (or coding) under a tree, and you see a white rabbit in a waistcoat with a pocket-watch run by complaining he&rsquo;s late?</p>

<p>Thus such adventures begin.</p>

<h2>EAT ME / DRINK ME</h2>

<p>As I fell to the bottom (or so I thought) of the rabbit-hole, I found a bottle of <code>cider</code> labeled <em>Drink Me,</em> and so I drank the <code>cider</code>. Suddenly, I could eval Clojure inline, jump to docstrings, jump to source for a fn, and it was wonderful.</p>

<p>The last time I tried Emacs, I always joked about how I was using Emacs but always edited my .emacs config with Vim.</p>

<p>&ldquo;Not this time,&rdquo; I thought, and used <a href="http://www.emacswiki.org/emacs/Projectile">Projectile</a> to manage my <code>.emacs.d</code> and edited my <code>user.el</code> in Emacs. Oh, it was better! Then, thought I, I should put my <code>.emacs.d</code> in source control (actually, it was demanded:</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> <a href="https://twitter.com/willowdower">@willowdower</a> Now you must post your config on github so that we may critique it.</p>&mdash; Alex Redington (@holy_chao) <a href="https://twitter.com/holy_chao/status/511574770388041728">September 15, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>&hellip;yeah).</p>

<p>But then I realized I was doing the <code>⌘-Tab</code> to iTerm to run <code>git ci -a</code> (I pity the fool that doesn&rsquo;t alias common git commoands) in&hellip; wait for it&hellip; <code>$EDITOR=/usr/bin/vim</code>.</p>

<p>That&rsquo;s when I found a bit of fairy cake called <a href="http://www.emacswiki.org/Magit">magit</a>, and I ate a bit of that and my Git workflow was inside of Emacs. Now it was a simple <code>M-x magit-status</code> to view my working tree state, where I could hit <code>s</code> to stage files for commit, and <code>C-c C-c</code> to commit changes, and <code>P P</code> to push.</p>

<p>Oh, it&rsquo;s beautiful.</p>

<h2>Curiouser and Curiouser</h2>

<p>Well, if Emacs can handle my Git workflow, what <em>can&rsquo;t</em> it do, I wondered?</p>

<p>I went a bit mad playing with multiple buffer and frame layouts; on one occasion I opened a shell inside an emacs biffer and launched the command-line version of emacs in a shell inside the windowed version of emacs.</p>

<p>Recursive rabbit holes.</p>

<p>When you&rsquo;re running the Cocoa-nested version of Emacs (not Aquamacs, fuck that noise, but just GNU Emacs packaged as a .app), you get some suggestions from the menus. Gnus for USENET or email, various games, a calendar&hellip;</p>

<p>Calendar?</p>

<p>That&rsquo;s whan I discovered Org-Mode.</p>

<h2>Org-Mode FTW</h2>

<p><a href="http://orgmode.org/">Org Mode</a> is an Emacs major mode that lets you organize your life. All of it. I&rsquo;m not even going into detail here, it&rsquo;s a deep, deep well. You can use it for a TODO list, sync it with your phone, use it <a href="http://www.railsonmaui.com/blog/2014/03/05/octopress-setup-with-github-and-org-mode-v2/">to write</a> your <a href="http://octopress.org">Octopress blog</a>.</p>

<p>(Confession: This blog is powered by octopress, and although it&rsquo;s now written in Emacs, I&rsquo;ve not gone full crazy and started composing it with Org-Mode)</p>

<h2>Twittering-Mode WTF</h2>

<p>That&rsquo;s when I started going down the tunnel of &ldquo;well, what <em>else</em> can it do?&rdquo;</p>

<p>And I discovered <code>twittering-mode</code>.</p>

<p>A quick <code>M-x package-install RET twittering-mode</code> puts a Twitter client in your text editor. Like you always needed. <code>M-x twit</code> will jump you right into your Twitter feed, <code>i</code> will enable user icons (yes, user avatars right in goddamn Emacs), and <code>u</code> will jump you to a buffer where you can compose a Tweet and hit <code>C-c C-c</code> to send it.</p>

<h2>Playing Games</h2>

<p>I&rsquo;d be remiss if I didn&rsquo;t mention that <code>M-x package-install RET 2048-mode</code> will install a game of 2048 in Emacs. Because that&rsquo;s really fucking important, you know?</p>

<p><strong>Sigh</strong></p>

<p>For good reason, Emacs comes standard with an AI psychotherapist named Eliza.</p>

<p>A quick <code>M-x doctor</code> and you&rsquo;re in therapy.</p>

<p>Which you&rsquo;ll probably need.</p>

<h2>&hellip;and Much, Much More</h2>

<p>I&rsquo;ve barely scratched the surface, but I feel like this post is long enough. There&rsquo;s so much down here, down the Emacs rabbit hole, that it will probably take me weeks to even catch up to whre I am right now; what I&rsquo;ve described so far is my first few days with this <del>operating system</del> text editor.</p>

<p>But it&rsquo;s a fun ride.</p>

<h3>Postscript</h3>

<p>Sorry for the Tolkien digression when my dominant allusion was <em>Alice in Wonderland&hellip;</em> Emacs is a weird place.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome to The Dark Side: Switching to Emacs]]></title>
    <link href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/"/>
    <updated>2014-10-23T20:42:40-04:00</updated>
    <id>http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs</id>
    <content type="html"><![CDATA[<p>I have to start this post by saying I&rsquo;ve been a dogmatic <a href="http://www.vim.org/">Vim</a> partisan since the 1990&rsquo;s, when I started using vi on the Solaris and Irix boxen I had access to, and then on my own machines when I got started with Linux in 1994.</p>

<p>I flamed against Emacs on Usenet, called it all the epithets (Escape Meta Alt Ctrl Delete, Eight Megs And Constantly Swapping (8 megs was a lot then), Eventually Mangles All Computer Storage)&hellip; I couldn&rsquo;t stand the chord keys and lack of modality.</p>

<p>Even once I got heavily into Lisp I still tried to stick with Vim, or tried LightTable, or Atom, or SublimeText. But then one day I hit a wall and Emacs (plus cider-mode and slime and a few other packages) was the obvious solution. Now I&rsquo;m out there evangelizing Emacs (I&rsquo;m writing this post in the Markdown major mode plus some helpful minor modes) and I figure I&rsquo;d offer some advice for those looking to convert to the Church of Emacs.</p>

<p><img src="/images/post-img/ignucius.png" alt="St. Ignucius" /></p>

<!--more-->


<p>Primarily, this post is inspired by a request I received on Twitter:</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> Got any links for switching to emacs? macvim isn&#39;t working in yosemite so I figure I might as well give emacs a real shot</p>&mdash; maɪk pətɛlə (@mikepatella) <a href="https://twitter.com/mikepatella/status/525439599276220416">October 24, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Instead of just compiling some links in a gist, I figured it was worthy of a blog post, so my seniors in the Church of Emacs can tell me where I&rsquo;m wrong in the comments. But this is based on my experience converting from Vim to Emacs, so I&rsquo;ll explain what worked for me.</p>

<h3>Emacs Prelude</h3>

<p>Prelude is really a great way to hit the ground running. It provides a wealth of sensible default packages, fixes the color scheme, and configures your <code>.emacs.d</code> config directory in a way that makes it easy to configure without breaking shit.</p>

<p>The install instructions are <a href="http://batsov.com/prelude/">here</a> and I highly recommend it.</p>

<p><strong>UPDATE:</strong> I forgot something vitally important about prelude. Prelude comes with <code>guru-mode</code> enabled by default, which disables your arrow keys and prods you to use Emacs default navigation commands instead (i.e. <code>C-p</code> for up, <code>C-n</code> for down, <code>C-b</code> for left, <code>C-f</code> for right). These commands are <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Moving-Point.html">worth knowing</a>, but I felt like I was being trolled when my arrow keys just told me what chord combination to use instead. (As an aside, <a href="http://thoughtbot.com">Thoughtbot&rsquo;s</a> <a href="https://github.com/thoughtbot/dotfiles">dotfiles</a> do the same thing with vim).</p>

<p>So you have two options: one is to <code>M-x guru-mode</code> to toggle it every session. The more permanent solution is to add the following to your config (if you&rsquo;re using Prelude, it should go in <code>~/.emacs.d/personal/preload/user.el</code>):</p>

<p><code>(setq prelude-guru nil)</code></p>

<p>Just my personal preference, but something I found really annoying when I got started.</p>

<p>As far as all those useful navigation and editing commands, emacs (naturally) has a built-in tutorial accessible from <code>M-x help-with-tutorial</code> or just <code>C-h t</code>.</p>

<p><strong>UPDATE TO THE UPDATE:</strong></p>

<p>Bozhidar Batsov (the author of Prelude) pointed out in <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/#comment-1651596560">this comment</a> that the current default behavior is to warn when arrow keys are used, not to disable them.</p>

<p>I hadn&rsquo;t noticed the change, which came in with <a href="https://github.com/bbatsov/prelude/commit/fda768992ef27f39f30178d4ebb8cbb559d5a3c6">this commit</a>.</p>

<p>You can find the configuration options for <code>guru-mode</code> in the README <a href="https://github.com/bbatsov/prelude#warnings-on-arrow-navigation-in-editor-buffers">here</a>.</p>

<h3>Emacs for Mac OS X</h3>

<p>I really like using the packaged app version of Emacs available from <a href="http://emacsformacosx.com/">http://emacsformacosx.com/</a>. It works great with Prelude, and doesn&rsquo;t include the cruft that <a href="http://aquamacs.org/">Aquamacs</a> tacks on to make it more Mac-ish.</p>

<p>You get a nice packaged Emacs.app that follows OS X conventions, but is really just straight GNU Emacs.</p>

<h3>evil-mode</h3>

<p>So, this is a touchy subject for me. When I first switched I used evil-mode to get my familiar Vim keybindings in emacs, but I actually found it made it more difficult to dive into emacs. Evil-mode is actually impressively complete when it comes to imposing vim functionality over top of emacs, but there are still times when you needto hit <code>C-x k</code> or <code>M-x something-mode</code> and the cognitive dissonance of switching between them was just overwhelming.</p>

<p>So I&rsquo;d forego evil-mode and just keep <a href="http://www.emacswiki.org/emacs/">Emacs Wiki</a> open in your browser for the first few days. It doesn&rsquo;t take that long to dive in head-first.</p>

<h3>Projectile</h3>

<p>It ships with Prelude, so not a major headline, but it does help to keep your projects organized and navigate files.</p>

<h2>On Lisp</h2>

<p>Since this is really about Clojure development environments, I might as well dive into the inherent Lispiness of emacs. The extension language is a Lisp dialect, and very easy to learn and use. Emacs is so extensible that one of the running jokes is that it&rsquo;s a great operating system in need of a decent text editor. I&rsquo;ll get to that later.</p>

<h3>cider-mode</h3>

<p>Interacting with Clojure is amazing with <a href="https://github.com/clojure-emacs/cider">cider</a>. You get an in-editor REPL, inline code evaluation, documentation lookup, a scratch buffer for arbitrary code evaluation, and a dozen other features. LightTable is nice with its InstaRepl but emacs/cider is the real deal. You cannot wish for a better Clojure dev environment&hellip; and the community agrees:</p>

<blockquote class="twitter-tweet" lang="en"><p>It&#39;s great to see that <a href="https://twitter.com/hashtag/CIDER?src=hash">#CIDER</a> is still the most popular <a href="https://twitter.com/hashtag/Clojure?src=hash">#Clojure</a> dev environment <a href="https://t.co/inB8bnlyEl">https://t.co/inB8bnlyEl</a> Guess I should release 0.8 soon! :)</p>&mdash; Bozhidar Batsov (@bbatsov) <a href="https://twitter.com/bbatsov/status/525408420489613313">October 23, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p><code>cider-jack-in</code> connects to a <code>lein repl :headless</code> instance, and <code>cider-mode</code> gives you inline evaluation in any Clojure file. It&rsquo;s amazing.</p>

<h3>paredit and smartparens</h3>

<p>Ever have trouble keeping your parens balanced? You&rsquo;re covered. <a href="http://www.emacswiki.org/ParEdit">paredit</a> is the classic solution, but a lot of folks are using <a href="https://github.com/Fuco1/smartparens">smartparens</a> instead&hellip; I&rsquo;ve been using smartparens in strict mode and it&rsquo;s made me a lot more disciplined about how I place my forms.</p>

<h2>Other Languages</h2>

<p>I&rsquo;ve been using Emacs for Ruby, Javascript, Haskell, C++, and so on, and it&rsquo;s been great. The only time I launch another app is when I have to deal with Java, because IntelliJ/Android Studio make life so much easier. But most of that is all the ridiculous build ceremony for Java, so that&rsquo;s neither here nor there.</p>

<h2>EmacsOS</h2>

<p>That joke about Emacs being an operating system? Not such a joke.</p>

<p>My favorite Twitter client right now is Emacs <a href="http://www.emacswiki.org/TwitteringMode">twittering-mode</a>. There&rsquo;s Gnus for Usenet and Email, and Emacs 24.4 just came out with an improved in-editor web browser called <code>eww</code>.</p>

<p>Emacs is a deep, deep rabbit hole. The only way in is head first. But there&rsquo;s so much you can do in here, and it&rsquo;s a staggeringly powerful environment.</p>

<p>Welcome to the dark side. We have macros.</p>

<p><img src="/images/post-img/vader-choke.jpg" alt="Dark Side" /></p>
]]></content>
  </entry>
  
</feed>
