<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jokes | Practical Elegance]]></title>
  <link href="http://decomplecting.org/blog/categories/jokes/atom.xml" rel="self"/>
  <link href="http://decomplecting.org/"/>
  <updated>2014-08-19T21:54:05-04:00</updated>
  <id>http://decomplecting.org/</id>
  <author>
    <name><![CDATA[Jason Lewis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Have A Happy #Whyday with whynot]]></title>
    <link href="http://decomplecting.org/blog/2014/08/19/have-a-happy-why-day-with-whynot/"/>
    <updated>2014-08-19T21:26:36-04:00</updated>
    <id>http://decomplecting.org/blog/2014/08/19/have-a-happy-why-day-with-whynot</id>
    <content type="html"><![CDATA[<p>It&rsquo;s August 19th, the day we remember why the lucky stiff&rsquo;s poignant departure
from the internet. <a href="https://github.com/ruby-jokes">ruby-jokes</a> would hate to
part with the Whyday tradition of hacking on something just for fun and releasing
it into the wild.</p>




<p>So it&rsquo;s with great ambivalence we announce <a href="https://github.com/ruby-jokes/whynot">whynot</a>,
a gem that does irresponsible things because&hellip; why not?</p>




<p>whynot is for when you really just don&rsquo;t care. It started as a single monkey-patch
to <code>Kernel</code>, called <code>maybe</code>. <code>maybe</code> takes a block, and may or may not yield the
result. So for instance:</p>




<figure class='code'><figcaption><span>maybe </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">maybe</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span>
</span><span class='line'>  <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>About half the time, this will return <code>6</code>. The other half, <code>nil</code>.</p>




<p>About three minutes after I pushed whynot to Github, <a href="https://twitter.com/mi_c_ah">Micah Gates</a>
added some kernel methods that allowed for a little more specificity: <code>usually</code>,
which will execute your code about 2/3 of the time, and <code>occasionally</code>, which
has about a 1 in 5 chance of actually executing your code.</p>




<h4>But wait, there&rsquo;s more!</h4>




<p>Just in time for the 0.0.4 release this afternoon, I decided sometimes, the truth
doesn&rsquo;t matter. Or, at least, you just don&rsquo;t care. So I added <code>meh</code>. Sometimes
true, sometimes false, whatever. When you really don&rsquo;t care, just do this:</p>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">meh</span> <span class="p">?</span> <span class="s2">&quot;I guess&quot;</span> <span class="p">:</span> <span class="s2">&quot;Nah.&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>I really wanted to create a global value like <code>true</code> or <code>false</code> that was neither
truthy nor falsey, but I&rsquo;m not sure whether that&rsquo;s possible, and I have a feeling
it would require some C-extension hackery if it is.</p>




<p>Perhaps for a future release?</p>




<p>As always, pull requests are welcome, and use at your own risk.</p>

]]></content>
  </entry>
  
</feed>
