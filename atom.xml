<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Practical Elegance]]></title>
  <link href="http://decomplecting.org/atom.xml" rel="self"/>
  <link href="http://decomplecting.org/"/>
  <updated>2014-10-30T06:11:01-04:00</updated>
  <id>http://decomplecting.org/</id>
  <author>
    <name><![CDATA[Jason Lewis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emacs: Down The Rabbit Hole]]></title>
    <link href="http://decomplecting.org/blog/2014/10/30/emacs-down-the-rabbit-hole/"/>
    <updated>2014-10-30T06:05:25-04:00</updated>
    <id>http://decomplecting.org/blog/2014/10/30/emacs-down-the-rabbit-hole</id>
    <content type="html"><![CDATA[<p>So I wrote <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">Welcome to The Dark Side: Switching to Emacs</a> in response to a tweet, but as any of my co-workers will attest, it doesn&rsquo;t take much to get me started on my Emacs workflow.</p>

<p>I feel like a religious convert&hellip; I miss those simple, unadorned Vim services but I&rsquo;m floored by the majesty of the stained glass and altar dressings and ritual of the Church of Emacs.</p>

<p>So before the jump, in the spirit of &ldquo;I&rsquo;ll show you mine if you show me yours,&rdquo; my <a href="https://github.com/canweriotnow/.emacs.d">.emacs.d</a>.</p>

<h2>An Unexpected Journey</h2>

<p>I lived in my happy little Vim hobbit hole, smoking my pipe and enjoying my brandy. It was not a dirty hole, or a sandy hole, but a hobbit hole, which means comfort.</p>

<p>One day, a wizard visted me.</p>

<p><img src="http://decomplecting.org/images/post-img/mccarthy1.jpg" title="'McCarthy at work at SAIL'" ></p>

<p>And that&rsquo;s when things began to get weird&hellip;</p>

<p>Okay, so maybe I didn&rsquo;t receive a visit from the revenant spirit of John McCarthy, ghost of programming past, present and future. Or maybe I did.</p>

<p>Maybe Paul Graham just convinced me I was <a href="http://www.paulgraham.com/avg.html">coding in Blub</a>, for whatever value of Blub I happened to be using.</p>

<p>See, the thing about Blub is it&rsquo;s a mutable value. When you&rsquo;re using C++ and Java comes along, you realize C++ was actually Blub. When you&rsquo;re using Perl for your day-to-day and discover Python, and then Ruby, you realize that not only was Python Blub, but Perl was an even Blubbier Blub.</p>

<p>Ruby&hellip; oh, Ruby. I still love Ruby. But then something happened.</p>

<p>I need to backpedal a bit.</p>

<p>There&rsquo;s <em>using</em> a language, and then there&rsquo;s <em>building</em> something in it. I&rsquo;d played with Scheme (<a href="http://mitpress.mit.edu/sicp/">SICP</a> is wonderful), and even Common Lisp, and I knew enough to appreciate the Lisp-nature of Ruby which, when combined with its Smalltalk-nature, I thought made for hte perfect productive language.</p>

<p>But see, I was <em>building</em> things in Ruby while I was <em>playing</em> with Lisp.</p>

<p>Along comes Clojure.</p>

<p>I was working in a pretty isolated programming role that granted me a lot of de facto autonomy. So when I got a request for a new service, I thought &ldquo;why not Clojure?&rdquo;</p>

<p>We&rsquo;re in late 2012 here, so bear with me.</p>

<p>My first Clojure project ran like a champ, was hailed as an unqualified success. Eventually I even <a href="http://decomplecting.org/blog/2013/02/03/datetime-conversions-in-clojure/">blogged about</a> a piece of that project that handled datetimes.</p>

<p>Fast-forward to the present, I&rsquo;ve written Clojure in <a href="http://www.sublimetext.com/">Sublime Text</a>, <a href="https://atom.io/">Atom</a>, mostly <a href="http://www.vim.org/">Vim</a> with the help of some awesome plugins from <a href="https://github.com/tpope">Tim Pope</a>.</p>

<p>Like I <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">mentioned before</a>, I&rsquo;ve had a religious hatred for Emacs since the mid-1990s when I entered the *nix world and got involved in USENET.</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/freebsdgirl">@freebsdgirl</a> <a href="https://twitter.com/darkuncle">@darkuncle</a> &#8230;and on that day, war broke out, destroying the fragile peace that had been brokered so long ago.</p>&mdash; jason λewis (@canweriotnow) <a href="https://twitter.com/canweriotnow/status/527532324234489857">October 29, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>The war is far from over&hellip;</p>

<p>&hellip;but, I digress.</p>

<p>I started the <a href="http://www.meetup.com/Baltimore-Clojure/">Baltimore Clojure Meetup</a> and met more Emacs users than I had in one place in a long time. Again, I dismissed Emacs.</p>

<p>That is, until I found <a href="http://lighttable.com/">LightTable</a> completely b0rked again and threw up my hands.</p>

<p>Perhaps I shouldn&rsquo;t have eaten my hands to begin with&hellip; sorry, equivocation humor. Can&rsquo;t resist.</p>

<h2>Welcome to Emacs</h2>

<p>So yeah, I went over my starter packages in the <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/">earlier post</a>, but I didn&rsquo;t talk about the full experience of discovery I underwent when I fully committed to emacs.</p>

<p>Sure, there&rsquo;s the whole <code>cider-mode</code> and <code>cider-jack-in</code> and <code>cider-nrepl</code> and even <code>cider-scratch</code> that make LightTable&rsquo;s inline evaluation modes look like child&rsquo;s play (no offense to Chris Granger, LightTable is beautiful, I love it, but&hellip; y&#8217;know, Emacs).</p>

<p>So I did those things, started with <a href="http://batsov.com/prelude/">Prelude</a>, added all the Clojure fun I could find, and got to work.</p>

<p>I also subscribed to <a href="http://www.reddit.com/r/emacs">/r/emacs</a>, and did a little reading on the <a href="http://www.emacswiki.org/emacs/">Emacs Wiki</a>.</p>

<p>Have you ever been comfortably reading (or coding) under a tree, and you see a white rabbit in a waistcoat with a pocket-watch run by complaining he&rsquo;s late?</p>

<p>Thus such adventures begin.</p>

<h2>EAT ME / DRINK ME</h2>

<p>As I fell to the bottom (or so I thought) of the rabbit-hole, I found a bottle of <code>cider</code> labeled <em>Drink Me,</em> and so I drank the <code>cider</code>. Suddenly, I could eval Clojure inline, jump to docstrings, jump to source for a fn, and it was wonderful.</p>

<p>The last time I tried Emacs, I always joked about how I was using Emacs but always edited my .emacs config with Vim.</p>

<p>&ldquo;Not this time,&rdquo; I thought, and used <a href="http://www.emacswiki.org/emacs/Projectile">Projectile</a> to manage my <code>.emacs.d</code> and edited my <code>user.el</code> in Emacs. Oh, it was better! Then, thought I, I should put my <code>.emacs.d</code> in source control (actually, it was demanded:</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> <a href="https://twitter.com/willowdower">@willowdower</a> Now you must post your config on github so that we may critique it.</p>&mdash; Alex Redington (@holy_chao) <a href="https://twitter.com/holy_chao/status/511574770388041728">September 15, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>&hellip;yeah).</p>

<p>But then I realized I was doing the <code>⌘-Tab</code> to iTerm to run <code>git ci -a</code> (I pity the fool that doesn&rsquo;t alias common git commoands) in&hellip; wait for it&hellip; <code>$EDITOR=/usr/bin/vim</code>.</p>

<p>That&rsquo;s when I found a bit of fairy cake called <a href="http://www.emacswiki.org/Magit">magit</a>, and I ate a bit of that and my Git workflow was inside of Emacs. Now it was a simple <code>M-x magit-status</code> to view my working tree state, where I could hit <code>s</code> to stage files for commit, and <code>C-c C-c</code> to commit changes, and <code>P P</code> to push.</p>

<p>Oh, it&rsquo;s beautiful.</p>

<h2>Curiouser and Curiouser</h2>

<p>Well, if Emacs can handle my Git workflow, what <em>can&rsquo;t</em> it do, I wondered?</p>

<p>I went a bit mad playing with multiple buffer and frame layouts; on one occasion I opened a shell inside an emacs biffer and launched the command-line version of emacs in a shell inside the windowed version of emacs.</p>

<p>Recursive rabbit holes.</p>

<p>When you&rsquo;re running the Cocoa-nested version of Emacs (not Aquamacs, fuck that noise, but just GNU Emacs packaged as a .app), you get some suggestions from the menus. Gnus for USENET or email, various games, a calendar&hellip;</p>

<p>Calendar?</p>

<p>That&rsquo;s whan I discovered Org-Mode.</p>

<h2>Org-Mode FTW</h2>

<p><a href="http://orgmode.org/">Org Mode</a> is an Emacs major mode that lets you organize your life. All of it. I&rsquo;m not even going into detail here, it&rsquo;s a deep, deep well. You can use it for a TODO list, sync it with your phone, use it <a href="http://www.railsonmaui.com/blog/2014/03/05/octopress-setup-with-github-and-org-mode-v2/">to write</a> your <a href="http://octopress.org">Octopress blog</a>.</p>

<p>(Confession: This blog is powered by octopress, and although it&rsquo;s now written in Emacs, I&rsquo;ve not gone full crazy and started composing it with Org-Mode)</p>

<h2>Twittering-Mode WTF</h2>

<p>That&rsquo;s when I started going down the tunnel of &ldquo;well, what <em>else</em> can it do?&rdquo;</p>

<p>And I discovered <code>twittering-mode</code>.</p>

<p>A quick <code>M-x package-install RET twittering-mode</code> puts a Twitter client in your text editor. Like you always needed. <code>M-x twit</code> will jump you right into your Twitter feed, <code>i</code> will enable user icons (yes, user avatars right in goddamn Emacs), and <code>u</code> will jump you to a buffer where you can compose a Tweet and hit <code>C-c C-c</code> to send it.</p>

<h2>Playing Games</h2>

<p>I&rsquo;d be remiss if I didn&rsquo;t mention that <code>M-x package-install RET 2048-mode</code> will install a game of 2048 in Emacs. Because that&rsquo;s really fucking important, you know?</p>

<p><strong>Sigh</strong></p>

<p>For good reason, Emacs comes standard with an AI psychotherapist named Eliza.</p>

<p>A quick <code>M-x doctor</code> and you&rsquo;re in therapy.</p>

<p>Which you&rsquo;ll probably need.</p>

<h2>&hellip;and Much, Much More</h2>

<p>I&rsquo;ve barely scratched the surface, but I feel like this post is long enough. There&rsquo;s so much down here, down the Emacs rabbit hole, that it will probably take me weeks to even catch up to whre I am right now; what I&rsquo;ve described so far is my first few days with this <del>operating system</del> text editor.</p>

<p>But it&rsquo;s a fun ride.</p>

<h3>Postscript</h3>

<p>Sorry for the Tolkien digression when my dominant allusion was <em>Alice in Wonderland&hellip;</em> Emacs is a weird place.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reify This!]]></title>
    <link href="http://decomplecting.org/blog/2014/10/29/reify-this/"/>
    <updated>2014-10-29T01:22:41-04:00</updated>
    <id>http://decomplecting.org/blog/2014/10/29/reify-this</id>
    <content type="html"><![CDATA[<p>On the way home this afternoon I was asked to explain Clojure&rsquo;s <code>reify</code> macro, and apparently I did quite well, as an &ldquo;Aha!&rdquo; moment resulted. So I shall endeavour to explain <code>reify</code> here in the hope that such a moment might be available to others.</p>

<p>Reify derives from the Latin <em>res,</em> or &ldquo;thing.&rdquo; So <code>reify</code> fundamentally means &ldquo;make a <em>thing</em> out of&hellip;.</p>

<h3>Protocols and Datatypes</h3>

<p>Clojure <a href="http://grimoire.arrdem.com/1.6.0/clojure.core/defprotocol/">protocols</a> are similar to Java interfaces: They define a set of methods/functions purely by their signatures without providing implementation details. Declaring that a class implements an interface (in Java) or that a record implements a protocol (in Clojure) is a contract that specifies that the given class or record, in order to be valid, will provide concrete implementations of those methods/functions.</p>

<p>But sometimes we don&rsquo;t need a reusable entity with reusable implementations that we can instantiate willy-nilly; sometimes we just need a <em>thing</em> that implements those methods.</p>

<p>In Java, anonymous inner classes can fulfill this purpose. In Clojure, we have <code>reify.</code></p>

<h3>That Nameless Thing</h3>

<p>OK, it&rsquo;s not really going to be nameless&hellip; let&rsquo;s say we have a putative protocol as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">defprotocol </span><span class="nv">Foo</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">bar</span> <span class="p">[</span><span class="nv">this</span><span class="p">])</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">baz</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">st</span><span class="p">])</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">quux</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure>


<p>So if we were creating a new record, we might do:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">defrecord </span><span class="nv">FooRecord</span>
</span><span class='line'>    <span class="nv">Foo</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">bar</span> <span class="p">[</span><span class="nv">this</span><span class="p">]</span> <span class="p">(</span><span class="nb">println </span><span class="nv">this</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">baz</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">st</span><span class="p">]</span> <span class="p">(</span><span class="nb">str </span><span class="nv">this</span> <span class="nv">st</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">quux</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">]</span> <span class="p">(</span><span class="nb">str </span><span class="nv">this</span> <span class="p">(</span><span class="nb">* </span><span class="nv">x</span> <span class="nv">y</span><span class="p">))))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which is perfect if we need to repeatedly instantiate a FooRecord that implements the Foo protocol. But sometimes we just need a Foo and be done with it. And so, Clojure gives us <code>reify</code>.</p>

<!--more-->


<h3>One-Off Things</h3>

<p>Instead of creating a defrecord (I&rsquo;m going to leave the issue of runtime class generation for another post), we have the option of creating an individual, unique object that implements the desired protocol via <code>reify</code>.</p>

<p>Like so:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="k">def </span><span class="nv">athing</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">reify</span> <span class="nv">Foo</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">bar</span> <span class="p">[</span><span class="nv">this</span><span class="p">]</span> <span class="p">(</span><span class="nb">println </span><span class="nv">this</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">baz</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">st</span><span class="p">]</span> <span class="p">(</span><span class="nf">str/replace</span> <span class="nv">this</span> <span class="p">(</span><span class="nb">re-pattern </span><span class="nv">st</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">quux</span> <span class="p">[</span><span class="nv">this</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">]</span> <span class="p">(</span><span class="nb">str </span><span class="nv">this</span> <span class="p">(</span><span class="nb">+ </span><span class="nv">x</span> <span class="nv">y</span><span class="p">)))))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now I have <code>athing</code> that implements the Foo protocol in a manner appropriate to its context, I don&rsquo;t have to worry about declaring a general case (class, or defrecord), and I can use this object while it&rsquo;s handy and let it get GC&rsquo;d when I&rsquo;m done with it.</p>

<h3>Incomplete, and Mostly Wrong</h3>

<p>This is a really brief description of the <code>reify</code> macro, and more details are available in the <a href="http://grimoire.arrdem.com/1.6.0/clojure.core/reify/">Clojure Grimoire</a>. But it apparently clarified things for one person, so I thought I&rsquo;d share it here.</p>

<p>But in the words of Steve Jobs&hellip;</p>

<h3>And One More Thing&hellip;</h3>

<p>We&rsquo;ve got a Lisp here in Clojure, right? We&rsquo;re doing functional programming, so why all of this larking about with objects?</p>

<p>It&rsquo;s not just Clojure&rsquo;s Java heritage. Forms like <code>defrecord</code>, <code>defprotocol</code>, and <code>reify</code> aren&rsquo;t about Java interop.</p>

<p>Let me take you back in time&hellip;</p>

<p>Once upon a time, there was a common Lisp dialect, established by ANSI standard, called Common Lisp.</p>

<p>In the times of mist, the original neckbeards established that this Common Lisp should have an object system, known as <a href="http://www.aiai.ed.ac.uk/~jeff/clos-guide.html">CLOS</a>, or the Common Lisp Object System.</p>

<p>Clojure has an object system as well; some of it seems ties to its underlying Java architecture (at the moment); the emergence of Clojure-CLR and cljs have opened up the possibilities for the object model, maybe?</p>

<p>Not really. OOP models aren&rsquo;t all that creative. Ruby has quite a novel object model but other than that, OOP is pretty boring and let&rsquo;s just forget about that unhappy chapter in our past, shall we?</p>

<p>Let&rsquo;s.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome to The Dark Side: Switching to Emacs]]></title>
    <link href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/"/>
    <updated>2014-10-23T20:42:40-04:00</updated>
    <id>http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs</id>
    <content type="html"><![CDATA[<p>I have to start this post by saying I&rsquo;ve been a dogmatic <a href="http://www.vim.org/">Vim</a> partisan since the 1990&rsquo;s, when I started using vi on the Solaris and Irix boxen I had access to, and then on my own machines when I got started with Linux in 1994.</p>

<p>I flamed against Emacs on Usenet, called it all the epithets (Escape Meta Alt Ctrl Delete, Eight Megs And Constantly Swapping (8 megs was a lot then), Eventually Mangles All Computer Storage)&hellip; I couldn&rsquo;t stand the chord keys and lack of modality.</p>

<p>Even once I got heavily into Lisp I still tried to stick with Vim, or tried LightTable, or Atom, or SublimeText. But then one day I hit a wall and Emacs (plus cider-mode and slime and a few other packages) was the obvious solution. Now I&rsquo;m out there evangelizing Emacs (I&rsquo;m writing this post in the Markdown major mode plus some helpful minor modes) and I figure I&rsquo;d offer some advice for those looking to convert to the Church of Emacs.</p>

<p><img src="http://decomplecting.org/images/post-img/ignucius.png" alt="St. Ignucius" /></p>

<!--more-->


<p>Primarily, this post is inspired by a request I received on Twitter:</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> Got any links for switching to emacs? macvim isn&#39;t working in yosemite so I figure I might as well give emacs a real shot</p>&mdash; maɪk pətɛlə (@mikepatella) <a href="https://twitter.com/mikepatella/status/525439599276220416">October 24, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Instead of just compiling some links in a gist, I figured it was worthy of a blog post, so my seniors in the Church of Emacs can tell me where I&rsquo;m wrong in the comments. But this is based on my experience converting from Vim to Emacs, so I&rsquo;ll explain what worked for me.</p>

<h3>Emacs Prelude</h3>

<p>Prelude is really a great way to hit the ground running. It provides a wealth of sensible default packages, fixes the color scheme, and configures your <code>.emacs.d</code> config directory in a way that makes it easy to configure without breaking shit.</p>

<p>The install instructions are <a href="http://batsov.com/prelude/">here</a> and I highly recommend it.</p>

<p><strong>UPDATE:</strong> I forgot something vitally important about prelude. Prelude comes with <code>guru-mode</code> enabled by default, which disables your arrow keys and prods you to use Emacs default navigation commands instead (i.e. <code>C-p</code> for up, <code>C-n</code> for down, <code>C-b</code> for left, <code>C-f</code> for right). These commands are <a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Moving-Point.html">worth knowing</a>, but I felt like I was being trolled when my arrow keys just told me what chord combination to use instead. (As an aside, <a href="http://thoughtbot.com">Thoughtbot&rsquo;s</a> <a href="https://github.com/thoughtbot/dotfiles">dotfiles</a> do the same thing with vim).</p>

<p>So you have two options: one is to <code>M-x guru-mode</code> to toggle it every session. The more permanent solution is to add the following to your config (if you&rsquo;re using Prelude, it should go in <code>~/.emacs.d/personal/preload/user.el</code>):</p>

<p><code>(setq prelude-guru nil)</code></p>

<p>Just my personal preference, but something I found really annoying when I got started.</p>

<p>As far as all those useful navigation and editing commands, emacs (naturally) has a built-in tutorial accessible from <code>M-x help-with-tutorial</code> or just <code>C-h t</code>.</p>

<p><strong>UPDATE TO THE UPDATE:</strong></p>

<p>Bozhidar Batsov (the author of Prelude) pointed out in <a href="http://decomplecting.org/blog/2014/10/23/welcome-to-the-dark-side-switching-to-emacs/#comment-1651596560">this comment</a> that the current default behavior is to warn when arrow keys are used, not to disable them.</p>

<p>I hadn&rsquo;t noticed the change, which came in with <a href="https://github.com/bbatsov/prelude/commit/fda768992ef27f39f30178d4ebb8cbb559d5a3c6">this commit</a>.</p>

<p>You can find the configuration options for <code>guru-mode</code> in the README <a href="https://github.com/bbatsov/prelude#warnings-on-arrow-navigation-in-editor-buffers">here</a>.</p>

<h3>Emacs for Mac OS X</h3>

<p>I really like using the packaged app version of Emacs available from <a href="http://emacsformacosx.com/">http://emacsformacosx.com/</a>. It works great with Prelude, and doesn&rsquo;t include the cruft that <a href="http://aquamacs.org/">Aquamacs</a> tacks on to make it more Mac-ish.</p>

<p>You get a nice packaged Emacs.app that follows OS X conventions, but is really just straight GNU Emacs.</p>

<h3>evil-mode</h3>

<p>So, this is a touchy subject for me. When I first switched I used evil-mode to get my familiar Vim keybindings in emacs, but I actually found it made it more difficult to dive into emacs. Evil-mode is actually impressively complete when it comes to imposing vim functionality over top of emacs, but there are still times when you needto hit <code>C-x k</code> or <code>M-x something-mode</code> and the cognitive dissonance of switching between them was just overwhelming.</p>

<p>So I&rsquo;d forego evil-mode and just keep <a href="http://www.emacswiki.org/emacs/">Emacs Wiki</a> open in your browser for the first few days. It doesn&rsquo;t take that long to dive in head-first.</p>

<h3>Projectile</h3>

<p>It ships with Prelude, so not a major headline, but it does help to keep your projects organized and navigate files.</p>

<h2>On Lisp</h2>

<p>Since this is really about Clojure development environments, I might as well dive into the inherent Lispiness of emacs. The extension language is a Lisp dialect, and very easy to learn and use. Emacs is so extensible that one of the running jokes is that it&rsquo;s a great operating system in need of a decent text editor. I&rsquo;ll get to that later.</p>

<h3>cider-mode</h3>

<p>Interacting with Clojure is amazing with <a href="https://github.com/clojure-emacs/cider">cider</a>. You get an in-editor REPL, inline code evaluation, documentation lookup, a scratch buffer for arbitrary code evaluation, and a dozen other features. LightTable is nice with its InstaRepl but emacs/cider is the real deal. You cannot wish for a better Clojure dev environment&hellip; and the community agrees:</p>

<blockquote class="twitter-tweet" lang="en"><p>It&#39;s great to see that <a href="https://twitter.com/hashtag/CIDER?src=hash">#CIDER</a> is still the most popular <a href="https://twitter.com/hashtag/Clojure?src=hash">#Clojure</a> dev environment <a href="https://t.co/inB8bnlyEl">https://t.co/inB8bnlyEl</a> Guess I should release 0.8 soon! :)</p>&mdash; Bozhidar Batsov (@bbatsov) <a href="https://twitter.com/bbatsov/status/525408420489613313">October 23, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p><code>cider-jack-in</code> connects to a <code>lein repl :headless</code> instance, and <code>cider-mode</code> gives you inline evaluation in any Clojure file. It&rsquo;s amazing.</p>

<h3>paredit and smartparens</h3>

<p>Ever have trouble keeping your parens balanced? You&rsquo;re covered. <a href="http://www.emacswiki.org/ParEdit">paredit</a> is the classic solution, but a lot of folks are using <a href="https://github.com/Fuco1/smartparens">smartparens</a> instead&hellip; I&rsquo;ve been using smartparens in strict mode and it&rsquo;s made me a lot more disciplined about how I place my forms.</p>

<h2>Other Languages</h2>

<p>I&rsquo;ve been using Emacs for Ruby, Javascript, Haskell, C++, and so on, and it&rsquo;s been great. The only time I launch another app is when I have to deal with Java, because IntelliJ/Android Studio make life so much easier. But most of that is all the ridiculous build ceremony for Java, so that&rsquo;s neither here nor there.</p>

<h2>EmacsOS</h2>

<p>That joke about Emacs being an operating system? Not such a joke.</p>

<p>My favorite Twitter client right now is Emacs <a href="http://www.emacswiki.org/TwitteringMode">twittering-mode</a>. There&rsquo;s Gnus for Usenet and Email, and Emacs 24.4 just came out with an improved in-editor web browser called <code>eww</code>.</p>

<p>Emacs is a deep, deep rabbit hole. The only way in is head first. But there&rsquo;s so much you can do in here, and it&rsquo;s a staggeringly powerful environment.</p>

<p>Welcome to the dark side. We have macros.</p>

<p><img src="http://decomplecting.org/images/post-img/vader-choke.jpg" alt="Dark Side" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fear and Coding in Las Vegas]]></title>
    <link href="http://decomplecting.org/blog/2014/08/22/fear-and-coding-in-las-vegas/"/>
    <updated>2014-08-22T17:11:52-04:00</updated>
    <id>http://decomplecting.org/blog/2014/08/22/fear-and-coding-in-las-vegas</id>
    <content type="html"><![CDATA[<p>I&rsquo;m sitting in the first session of the <a href="http://code.org">Code.org</a> K-5 PD
training workshop.</p>

<p>It&rsquo;s my first time in Las Vegas. We went to In-N-Out Burger (required if I
travel out west), and I hit a $2k jackpot on penny slots. Not bad. And now
we&rsquo;re getting an overview of the K-5 Code.org curriculum. It&rsquo;s pretty exciting.</p>

<p>I learned to code when I was 5. Learning BASIC on a TI 99/4A. This is pretty much
my first computer:</p>

<p><img src="http://www.digibarn.com/collections/systems/ti99-4a-beige/Image84.jpg"></p>

<!-- more -->


<p>I love this idea. I receive constant shit from friends, family, co-workers,
whatever, that the fact that I started hacking at 5 is probably more scary and
off-putting when I talk about promoting CS education in K-5 (which is why I&rsquo;m
in Vegas, thanks to Code.org).</p>

<p>But Real Soon Now™ everyone is going ot start coding at 5, and on somethimg way
more sphisticated than a Texas Instruments 99/4A.</p>

<p><a href="https://code.org/about/leadership/hadi_partovi">Hadi Partovi</a> is describing how
much &ldquo;cooler&rdquo; coding is becoming as I type. I&rsquo;m glad. I can&rsquo;t wait to start
teaching this Code.org curriculum. Coding isn&rsquo;t just for white boys in hoodies,
It&rsquo;s not some thing for introverted nerds (well, we might have invented it, but
  we&rsquo;re happy to share).</p>

<p>So it&rsquo;s very exciting, and I&rsquo;m so happy to be a part of it.</p>

<p>Hackers. Hackers everywhere.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Have A Happy #Whyday with whynot]]></title>
    <link href="http://decomplecting.org/blog/2014/08/19/have-a-happy-why-day-with-whynot/"/>
    <updated>2014-08-19T21:26:36-04:00</updated>
    <id>http://decomplecting.org/blog/2014/08/19/have-a-happy-why-day-with-whynot</id>
    <content type="html"><![CDATA[<p>It&rsquo;s August 19th, the day we remember why the lucky stiff&rsquo;s poignant departure
from the internet. <a href="https://github.com/ruby-jokes">ruby-jokes</a> would hate to
part with the <a href="http://whyday.org/">Whyday</a> tradition of hacking on something just for fun and releasing
it into the wild.</p>

<p>So it&rsquo;s with great ambivalence we announce <a href="https://github.com/ruby-jokes/whynot">whynot</a>,
a gem that does irresponsible things because&hellip; why not?</p>

<p>whynot is for when you really just don&rsquo;t care. It started as a single monkey-patch
to <code>Kernel</code>, called <code>maybe</code>. <code>maybe</code> takes a block, and may or may not yield the
result. So for instance:</p>

<figure class='code'><figcaption><span>maybe </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">maybe</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span>
</span><span class='line'>  <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>About half the time, this will return <code>6</code>. The other half, <code>nil</code>.</p>

<p>About three minutes after I pushed whynot to Github, <a href="https://twitter.com/mi_c_ah">Micah Gates</a>
added some kernel methods that allowed for a little more specificity: <code>mostly</code>,
which will execute your code about 2/3 of the time, and <code>occasionally</code>, which
has about a 1 in 5 chance of actually executing your code.</p>

<h4>But wait, there&rsquo;s more!</h4>

<p>Just in time for the 0.0.4 release this afternoon, I decided sometimes, the truth
doesn&rsquo;t matter. Or, at least, you just don&rsquo;t care. So I added <code>meh</code>. Sometimes
true, sometimes false, whatever. When you really don&rsquo;t care, just do this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">meh</span> <span class="p">?</span> <span class="s2">&quot;I guess&quot;</span> <span class="p">:</span> <span class="s2">&quot;Nah.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I really wanted to create a global value like <code>true</code> or <code>false</code> that was neither
truthy nor falsey, but I&rsquo;m not sure whether that&rsquo;s possible, and I have a feeling
it would require some C-extension hackery if it is.</p>

<p>Perhaps for a future release?</p>

<p>As always, pull requests are welcome, and use at your own risk.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Comments And Moderation]]></title>
    <link href="http://decomplecting.org/blog/2014/06/10/on-comments-and-moderation/"/>
    <updated>2014-06-10T15:01:23-04:00</updated>
    <id>http://decomplecting.org/blog/2014/06/10/on-comments-and-moderation</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve always taken a hands-off approach to moderating comments, feeling that it was a form of censorship to restrict discussion even on my own blog. It&rsquo;s worked pretty well; I feel like prior to yesterday, I&rsquo;ve deleted less than three comments in the three years I&rsquo;ve maintained this blog.</p>

<p>But yesterday&rsquo;s post, <a href="http://decomplecting.org/blog/2014/06/09/im-telling/">I&rsquo;m Telling :: Employer-Tattling and The Decline of Agency</a>, brought in some of the nastiest of trolls, and I had to re-evaluate that policy. The post also got so many comments I was going crazy trying to weigh my anti-censorship views against comments that bordered on hate speech.</p>

<!--more-->


<p>I even asked Twitter for advice:</p>

<blockquote class="twitter-tweet" lang="en"><p>Twitter, I need advice about when it&#39;s appropriate to moderate blog comments. Becoming uncomfortable with my hands-off policy, sadly.</p>&mdash; &#39;(jason lewis) (@canweriotnow) <a href="https://twitter.com/canweriotnow/statuses/476164584227602432">June 10, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I got a number of suggestions:</p>

<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> <a href="https://twitter.com/ckaratnytsky">@ckaratnytsky</a> If it is libellous, slanderous, threatening, or grossly offensive, then have at it.</p>&mdash; Khaled Z (@der_bluthund) <a href="https://twitter.com/der_bluthund/statuses/476165033773514752">June 10, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/der_bluthund">@der_bluthund</a> <a href="https://twitter.com/canweriotnow">@canweriotnow</a> <a href="https://twitter.com/ckaratnytsky">@ckaratnytsky</a> Switch off comments. Plenty of other places for ppl to converse.</p>&mdash; lastwheel (@lastwheel) <a href="https://twitter.com/lastwheel/statuses/476165712986513408">June 10, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" data-conversation="none" lang="en"><p><a href="https://twitter.com/canweriotnow">@canweriotnow</a> <a href="https://twitter.com/ckaratnytsky">@ckaratnytsky</a> when it is all hate, no constructive add, then I delete. as an anarchist I felt I needed 2B hands off. not true</p>&mdash; Geordie (@GeordieOBrien) <a href="https://twitter.com/GeordieOBrien/statuses/476166503600259072">June 10, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>I don&rsquo;t think I want to disable comments completely. But as <a href="https://twitter.com/lastwheel">@lastwheel</a> suggests, there are plenty of other places for people to converse. In fact, the <a href="https://news.ycombinator.com/item?id=7869644">Hacker News thread</a> for the post mentioned above had some pretty great (as well as pretty terrible, but hey, it&rsquo;s HN) replies. Plenty of blogs I read even post links to HN and Reddit threads in lieu of on-site comments.</p>

<h3>The plan</h3>

<p>So here&rsquo;s what I&rsquo;m going to do, as an experiment. Comments will remain open for 24-48 hours on the post. After that, I&rsquo;m closing the thread, and you can take it to <a href="http://news.ycombinator.com">Hacker News</a>, <a href="http://reddit.com">Reddit</a>, or wherever else the post ends up. Ths way there&rsquo;s ample time for discussion, but I don&rsquo;t have to worry about spending my life moderating comments. Hell, I rarely have time for blogging in the first place lately.</p>

<p>If you have any other suggestions&hellip; Look, comments!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm Telling :: Employer-Tattling and The Decline of Agency]]></title>
    <link href="http://decomplecting.org/blog/2014/06/09/im-telling/"/>
    <updated>2014-06-09T10:03:36-04:00</updated>
    <id>http://decomplecting.org/blog/2014/06/09/im-telling</id>
    <content type="html"><![CDATA[<p>The other night Twitter was abuzz with controversy and drama, as per usual. One of those threads (which I&rsquo;ll get to momentarily) invovled what I&rsquo;ll refer to as &ldquo;employer-tattling,&rdquo; and <a href="https://twitter.com/soederpop">Jon Soeder</a> (laudably without drawing attention to the ongoing echo chamber), tweeted this:</p>

<blockquote class="twitter-tweet center" lang="en"><p>If somebody says something vile on the internet, it is not your place to notify their employer. You are setting a terrible precedent.</p>&mdash; your boy jon soeder (@soederpop) <a href="https://twitter.com/soederpop/statuses/475127514655100929">June 7, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>He doesn&rsquo;t mention which Twitter thread prompted this, but I have an educated guess.</p>

<!--more-->


<h3>Last Friday Night</h3>

<p>Someone called <a href="https://twitter.com/shanley">Shanley Kane</a> a cunt. Okay, it was <a href="https://twitter.com/zivcjs">Ash Taylor</a>, lest I be accused of omitting details. Apparently, he quickly thought better of it and deleted the tweet, but Shanley got a screenshot!</p>

<blockquote class="twitter-tweet center" lang="en"><p>so <a href="https://twitter.com/zivcjs">@zivcjs</a>, who works for <a href="https://twitter.com/Livestream">@livestream</a> under <a href="https://twitter.com/maxhaot">@maxhaot</a>, deleted his tweets calling me a cunt but screenshots <a href="https://t.co/UfLYcuhoFs">pic.twitter.com/UfLYcuhoFs</a></p>&mdash; Shanley (@shanley) <a href="https://twitter.com/shanley/statuses/475066367956103168">June 7, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>Using that kind of language (in general, but particularly in a public, online forum such as Twitter) is offensive, inexcusable, and basically stupid. My guess is that Ash realized this when he deleted the tweet.</p>

<p>Ash also <a href="http://zi.vc/apology.html">apologized publicly</a> to Shanley and <a href="https://twitter.com/ashedryden">Ashe Dryden</a> (also mentioned in the offending tweet), even after <a href="https://twitter.com/livestream">Livestream</a> fired him.</p>

<p>It&rsquo;s been pointed out in the related <a href="https://news.ycombinator.com/item?id=7865425">Hacker News thread</a> that Shanley herself is not known for shying away from <a href="https://medium.com/about-work/finding-out-youre-a-sexist-misogynistic-homophobic-classist-racist-asshole-and-hypocrite-f986fbd5e51f">name-calling</a> and <a href="https://twitter.com/ryan/status/474791621100199936">ad hominem</a> attacks.</p>

<p>But the point of this post isn&rsquo;t whether unproductive and childish name-calling (sexist or not) should be acceptable in public discourse; it&rsquo;s about employer-tattling, and its rather disturbing implications.</p>

<h3>Playground Rules</h3>

<p>My first concern about employer-tattling is the infantilizing effect it has both on the offended party, and on public discourse in general. This decline of agency implies a troubling transfer of responsibility from individuals to institutions. One would hope that adults functioning in the public sphere would have the maturity both to own their words (and mistakes), and appropriately respond to criticism — and difficult though it may be, sometimes ignoring trolls is the most productive response.</p>

<p><img class="center" src="http://imgs.xkcd.com/comics/duty_calls.png" title="Duty Calls" ></p>

<p>Increasingly, we&rsquo;re seeing a tendency to run to the nearest &ldquo;adult&rdquo; to plead for them to punish the offending party. And in a world of adults behaving like spoiled children, the next relative equivalent to an adult (i.e., position of power or authority) is either the State or, if no laws have been broken, a corporation.</p>

<h3>Corporations aren&rsquo;t just people, they&rsquo;re parents</h3>

<p>At least, that&rsquo;s the message this sort of tactic sends. I find it sadly ironic that supposed critics of institutionalized patriarchy (a very real and entrenched systemic problem in our society, particularly within capitalism itself), would deliberately reinforce the role of the corporation/employer as the judging, disciplining Father archetype.</p>

<p><img class="center" src="http://decomplecting.org/images/post-img/1984.jpg"></p>

<p>I want to make it clear (if it isn&rsquo;t already) that this post is not intended as an attack on anyone, but as an externalization of my bewilderment at whether those who employ this tactic have fully thought through the implications of doing so.</p>

<p>Many of the people who seem to think this tactic is acceptable also tend to express a commitment to class politics (as well as politics of race and gender, and their intersectionality). This is a tactic that demonstrates a shocking lack of class solidarity. Deliberately attempting to destroy the employment or employability of a fellow worker out of spite is inexcusable.</p>

<p>Appealing to capital to enforce one&rsquo;s political agenda (no matter how noble that agenda might be) implicitly places that agenda as reliant upon and subject to capital itself. It&rsquo;s just plain bad politics.</p>

<p>And as Jon points out, it sets a terrible precedent. It expands the role of the employer to managing the totality of our lives, rather than limiting that influence to our professional lives. It changes us from professionals into frightened children.</p>

<h3>A culture of fear</h3>

<p>The prospect that one could lose one&rsquo;s livelihood, threatening the safety and security of one&rsquo;s family, over an online discussion, has a chilling, Orwellian feel. It&rsquo;s actually worse than that: whereas Orwell envisioned an omnipotent State punishing &ldquo;thoughtcrime,&rdquo; we have an emergent culture of fear in which no state intervention is necessary. The NSA might be reading my email, but they&rsquo;re not likely to get me fired.</p>

<p>I know whereof I speak. Some months ago, I was involved in a Twitter conversation about a study that showed that women on IRC were more likely to be harassed than men. While this seemed perfectly reasonable an observation, I (among others) had some questions about the methodology (e.g., literally women, or users with female-sounding handles, etc.). Attempting to inject some levity into what was becoming a tense discussion (something I would do IRL), I made an offhand reference to Rule 30 from the <a href="http://rulesoftheinternet.com/index.php?title=Main_Page">Rules of The Internet</a>, i.e., &ldquo;There are NO girls on the internet.&rdquo;</p>

<p>I did not expect the vitriolic reaction that ensued, and once I realized that people had genuinely taken offense, I apologized. I did not verbally attack anyone or do anything but have a civil conversation about this one study, but I made a reference to a stupid meme without thinking anyone would react beyond eye-rolling.</p>

<p>A couple of days later, my COO, <a href="https://twitter.com/teachingdaisy">Margaret Roth</a> asked me about a weird voicemail she had received. Someone had called claiming to be interested in our company&rsquo;s services, but then went on at length saying, &ldquo;I don&rsquo;t think you know what&rsquo;s going on in your development team, but your CTO tweeted that there were no women on the internet, and I&rsquo;m very concerned about the type of employees that you&rsquo;re hiring.&rdquo; No name or number left (odd for someone supposedly interested in the company&rsquo;s services), just accusations of poor management and supervision.</p>

<p>Upon reflection for this post, Margaret said, &ldquo;It was ridiculous that I was getting a call about this at all, let alone without citation. It&rsquo;s not my responsibility to police what you say on social media, especially in a case when I&rsquo;m getting blindly harassed for my management skills. If someone wanted to have an adult conversation with me about this, I&rsquo;d be happy to do so.&rdquo;</p>

<p>I&rsquo;m glad I&rsquo;m lucky enough to work for someone who treats me like an adult as well as a professional, and doesn&rsquo;t respond to anonymous attempts at character assassination, but it was a rather disturbing experience for both of us, and not everyone is so lucky.</p>

<p>I backed off from participation on Twitter for some time after that incident. It&rsquo;s never pleasant to be reminded that participating openly on the internet can (and often does) result in being doxxed and/or harassed in &ldquo;real life.&rdquo;</p>

<blockquote class="twitter-tweet" lang="en"><p><a href="https://twitter.com/whit537">@whit537</a> not everyone is in the privileged position of being able to have all kinds of shit on the internet &quot;openly&quot; w/out getting harassed</p>&mdash; Shanley (@shanley) <a href="https://twitter.com/shanley/statuses/467089426741338112">May 15, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<h3>The decline of agency</h3>

<p>This is the first of (what I intend to be) a series of posts on what I perceive to be a decline of the concept of agency in socio-politico-cultural discourse. Whether it&rsquo;s the instant recourse to public Twitter-shaming rather than civil dialogue of <a href="http://decomplecting.org/blog/2013/03/23/donglegate/">Donglegate</a>, or the infantilizing trend of employer-tattling, we are seeing a retreat from personal agency and a shift toward character assassination, public intimidation, and creating a culture of fear that is inimical to productive public discourse and debate. I can&rsquo;t speculate as to whether such discourse is even valued by the practitioners of these tactics, but one can&rsquo;t help but wonder.</p>

<p>Ash Taylor was just plain wrong to (publically or otherwise) refer to Shanley and Ashe as cunts. No excuse. But should he have gotten fired over it? Well, I suppose that&rsquo;s up to his (now former) employer, Livestream. But I wonder if Livestream would have reacted so quickly and drastically if they hadn&rsquo;t been prodded by such a polarizing figure with a degree of celebrity in the internet echo chamber.</p>

<p>It&rsquo;s also a bit interesting that the founder and CEO of Feminist Technology Collective, Inc. (i.e., someone who <em>cannot</em> be fired) is trying to get people fired and doesn&rsquo;t see (or willfully ignores, or gleefully exploits, but let&rsquo;s generously hope it&rsquo;s an innocent blind spot) the inherent privilege gap in that scenario. But that&rsquo;s a topic for another post.</p>

<p><em>The author would like to thank <a href="https://twitter.com/soederpop">Jon Soeder</a> for pushing me to finally write this, and <a href="https://twitter.com/teachingdaisy">Margaret Roth</a> for her editorial guidance and support.</em></p>

<p>Update: Comments are <a href="http://decomplecting.org/blog/2014/06/10/on-comments-and-moderation/">now closed</a>, but there&rsquo;s plenty of discussion over on <a href="https://news.ycombinator.com/item?id=7869644">Hacker News</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scream When You Learn]]></title>
    <link href="http://decomplecting.org/blog/2014/03/11/scream-when-you-learn/"/>
    <updated>2014-03-11T22:39:38-04:00</updated>
    <id>http://decomplecting.org/blog/2014/03/11/scream-when-you-learn</id>
    <content type="html"><![CDATA[<p><em>Apologies to Charles Bukowski</em></p>

<h4>1.</h4>

<p>I fucking hate this school. All the teachers too. Well, there are a few exceptions, but few enough it doesn&rsquo;t really matter.</p>

<p>There are a few saving graces. Molly, that redhead in fourth period I&rsquo;m dying to fuck. There&rsquo;s a party Friday, maybe that&rsquo;ll happen. At least I&rsquo;ll be drunk enough not to care about this shithole for a few hours.</p>

<p>Had a test today. Fucking Mr. Blum walked over to my desk and watched me solve quadratic equations. Grabbed the calculator out of my hand when he saw me using the program I wrote to solve them. Old fucking moron doesn&rsquo;t even know what these piece of shit TI-83&rsquo;s are capable of. Thought I was cheating.</p>

<!-- more -->


<p>Writing that goddamn program while I was halfway into the Ballmer Peak was how I learned to <em>understand</em> this irrelevant cocksucking formula, how can he not get that? I don&rsquo;t get these ancient techno-illiterate cunts they put in charge of managing the prison sentence of our youths.</p>

<h4>2.</h4>

<p>They gave us all iPads today. It was exciting until we realized they locked the fuckers down so they could only access Pearson-supplied, school-board-blessed, castrated useless pointless fucking content that isn&rsquo;t going to help me get in Molly&rsquo;s pants, much less learn anything better than I could from an ancient goddamn textbook. Fuck this place. I need a drink.</p>

<p>At least it&rsquo;s Friday. I can get drunk at Pete&rsquo;s place tonight and maybe cop a feel off Molly. At least I can look back on that since this shit school is never going to do a thing to get <em>me</em> into Harvard. Not that that degree would be worth wiping my ass with by the time I would graduate.</p>

<p>Fuck, I might as well devote my time to whiskey and women and poetry, it worked out well enough for that old misogynist bastard Bukowski I read last semester.</p>

<p>At least that fucker was honest, unlike the goddamn assholes handing us crippled iPads.</p>

<h4>3.</h4>

<p>The party was okay. Grabbed Molly&rsquo;s tit for a hot second, she smacked me. Okay.</p>

<p>Pete and Jimmy and I bypassed the shit security on those iPads. Managed to at least get on Facebook and share that stupid quadratic equation solver I wrote for my calculator, not that the other asswipe math teachers like Blum will ever understand the value of writing shit like that. Pretty sure we&rsquo;re getting suspended if not expelled.</p>

<p>I should give up now. What&rsquo;s the fucking point of even trying when the inmates are running the asylum? These fuckers couldn&rsquo;t teach a baby to shit and that&rsquo;s the truth. Why give us iPads when our damn teachers are like a million chimps banging on a million typewriters?</p>

<p>Why didn&rsquo;t somebody teach the fucking teachers?</p>

<p>I&rsquo;m going to fucking scream.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Discussing Privilege: EduCon Reflections #1]]></title>
    <link href="http://decomplecting.org/blog/2014/01/27/discussing-privilege-educon-reflections-number-1/"/>
    <updated>2014-01-27T20:52:36-05:00</updated>
    <id>http://decomplecting.org/blog/2014/01/27/discussing-privilege-educon-reflections-number-1</id>
    <content type="html"><![CDATA[<p>While I&rsquo;m planning a full &ldquo;overview&rdquo; reflection on <a href="http://educonphilly.org">EduCon 2.6</a>, I was (pardon the pun) privileged to participate in a conversation entitled <a href="http://educonphilly.org/conversations/The_Privileged_Voices_in_Education">&ldquo;The Privileged Voices in Education&rdquo;</a>, facilitated by <a href="https://twitter.com/audreywatters">Audrey Watters</a> and <a href="https://twitter.com/TheJLV">Jose Vilson</a>. Audrey has written about the session on <a href="http://www.hackeducation.com/2014/01/26/the-privileged-voices-in-education-educon/?utm_content=buffer01abf&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">her blog</a>, and Jose has written about it on <a href="http://thejosevilson.com/educon-addressing-privilege-developing-learners-race/">his blog</a>, so you can refer to those for context. But I want to talk about my takeaways from that wonderful session and what came after while it&rsquo;s fresh in my mind, and then work on a more general EduCon post.</p>

<h3>Privilege</h3>

<p>This is a Hard Topic to address in a meaningful way that actually effects change. It&rsquo;s a hard topic to broach in general. I applaud Audrey and Jose for creating this EduCon session, for their facilitation of the conversation, and I&rsquo;m in awe of how civil, insightful, and enlightening the discourse was.</p>

<p>Let me start by confessing: as often happens, I was unable to make it through the discussion without saying something (at the very least) bothersome. I talked about my initial reaction to <a href="https://twitter.com/search?q=%23edchat&amp;src=typd">#edchat</a>, a hashtag-based recurring event for educators on Twitter, as an offhand preface to the difficulty of certain discussions in diverse media. <a href="https://twitter.com/tomwhitby">Tom Whitby</a>, founder of #edchat, was in the room. This actually opened a (in my opinion) constructive dialogue <em>ex post facto,</em> but I&rsquo;ll return to this later.</p>

<!--more-->


<h3>The Session</h3>

<p><span class='pullquote-right' data-pullquote='there is a certain privilege inherent in knowing the terminology used to discuss privilege.'>
This was the dialogue I want to have about privilege. We discussed and defined privilege, race/class/gender/etc., micro-aggressions, and all of the many terminologies applied in analyzing privilege. Coming from an extreme left-wing political background, it was the first time it occurred to me that there is a certain privilege inherent in knowing the terminology used to discuss privilege. So the discussion on definitions, and the subjectivity inherent in the very nature of, i.e., the experience of micro-aggression, was a valuable conversation.
</span></p>

<p>Audrey and Jose did an admirable job facilitating the conversation, and although my purpose in attending EduCon was to learn more about current progressive practices in pedagogy, educational technology, and professional development (it was a work trip, after all), this was the most meaningful session to me in terms of my own experiences trying to address these difficult topics in my own day-to-day conversations, and my desire to elevate the level of discourse above snarky tweets and <a href="http://news.ycombinator.com">Hacker News</a> comments.</p>

<p><em>Note: I&rsquo;ll update this post when the video becomes available&hellip; it&rsquo;s worth a watch.</em></p>

<p>I think everyone in that session came away with a better understanding of the effects of privilege on their daily lives and professional practice — educators and technologists alike.</p>

<h3>Mon Faux Pas</h3>

<p>I mentioned that I made a comment about #edchat that caused a bit of a stir after the fact&hellip; I&rsquo;ll talk about that now. I was marveling at how <em>well</em> the session was addressing these issues, and wanted to talk about how hard it is to dive into sensitive, emotionally charged topics such as this in a medium like, for instance, Twitter. I mentioned my initial reaction to #edchat, i.e., &ldquo;this is completely the wrong tool for this use case.&rdquo; It was an aside I used to preface my comments on how much more productive I thought the conversation we were having (and the way we were conducting it) was vs. the usual privilege discussions on Twitter (and even blog posts, or HN posts) typically go.</p>

<p>I unwittingly made a comment, that without context, was interpretable as a criticism or dismissal of #edchat <em>itself,</em> and that was certainly not my intention. Tom wrote a <a href="http://tomwhitby.wordpress.com/2014/01/27/sometimes-a-chat-is-just-a-chat">blog post</a> addressing my comment (and defending #edchat) <a href="http://tomwhitby.wordpress.com/2014/01/27/sometimes-a-chat-is-just-a-chat">here</a>, which you should read. My apology (both in the modern sense, and in the sense of ἀπολογία), is <a href="http://tomwhitby.wordpress.com/2014/01/27/sometimes-a-chat-is-just-a-chat/#comment-7992">in the comments</a>. Both worth reading, for context.</p>

<p>My increasing disdain for Twitter for any kind of serious discussion is really about context. Twitter is, by design, a global cocktail party. You hear a comment that intrigues, enrages, or otherwise engages you, and you hop to another conversation, and then to another. That&rsquo;s the intent. I won&rsquo;t go to the detail I did in my comment, but I&rsquo;m glad educators find #edchat useful. That&rsquo;s fantastic. I still believe there are better tools for the use case, but knowing about other, perhaps less accessible, tools, is part of my privilege derived from living in software. So I&rsquo;m not criticizing there.</p>

<p>I do believe that topics like privilege cut to the core of our existence as being-with-others (forgive my Heideggerian moment) to a degree that the stripping away of context that Twitter facilitates makes addressing Hard Topics that much harder.</p>

<h3>Mea Culpa (Secunda Parte)</h3>

<p>I&rsquo;m no angel when it comes to having constructive dialogue in (I hate myself for using this word) &ldquo;cyberspace.&rdquo;</p>

<p>I&rsquo;m fairly antisocial by nature, and I tend to deflect with (often inappropriate) humor. For people who know me well, it tends to be endearing. For completely anonymous environments (IRC, 4chan, etc.), it&rsquo;s dismissable. Twitter (among other social platforms) is weird in that you&rsquo;re interacting on a personal level with strangers or semi-strangers.</p>

<p>I don&rsquo;t play well with others, at least until I know them well. Even then, my default response is the humor-deflection coping mechanism. I&rsquo;ve definitely fucked up in the past in these Twitter discussions, from referencing <a href="http://rulesoftheinternet.com/index.php?title=Main_Page">The Rules Of The Internet</a> to addressing Daniel Tosh&rsquo;s terrible riposte to an audience member&rsquo;s response to his joke about <a href="http://www.thedailybeast.com/articles/2012/07/11/why-daniel-tosh-s-rape-joke-at-the-laugh-factory-wasn-t-funny.html">rape jokes</a> within the frame of reference of &ldquo;comedy club culture&rdquo; and &ldquo;heckling&rdquo; instead of prioritizing the impact on the woman who initiated the critique.</p>

<p>There are ups and downs to doing a major in Philosophy and a minor in Women&rsquo;s Studies. For the first part, and maybe this is endemic to post-structuralists, it gives you the leeway to critique anything, at any time, on any basis. The critique may be correct (within a narrow frame of reference), but cannot subsume the human, emotional factor in the response it will (often predictably) invoke.</p>

<p>I have also denigrated <a href="http://en.wikipedia.org/wiki/Radical_feminism">Radical Feminism</a> as a degenerate, self-destructive current within feminism (as opposed to <a href="http://en.wikipedia.org/wiki/Third-wave_feminism">Third-wave Feminism</a>, <a href="http://en.wikipedia.org/wiki/Marxist_feminism">Marxist Feminism</a>, <a href="http://en.wikipedia.org/wiki/Post-feminism">Postfeminsim</a>, etc.), not intending to offend RadFem advocates, but simply as an extrapolation of my work (supported by my professors), on the theoretical insufficiency/incoherence of RadFem (and most second-wave feminism). I&rsquo;ve had these conversations in person (and in symposia), and it was most productive; on blogs and Twitter, they become a perceived threat; whether to received dogma or social positioning I do not know. I don&rsquo;t want reiterations of my undergrad theses to become a perceived micro-aggression. I don&rsquo;t hate people who consider RadFem a constructive analysis of their social situation, and perhaps it <em>is</em> a privileged position to consider philosophy <em>qua</em> philosophy; but I do not see a possibility of constructive dialogue without the possibility of objective reasoning about basic concepts.</p>

<h3>Privilege as #firstworldproblem</h3>

<p>We have to admit, at some point, that the ability to discuss privilege is, in and of itself, a privilege. In sub-Saharan Africa, one does not have the opportunity to discuss the privilege of the warlords who have conscripted one, at the age of eleven or twelve, into an &ldquo;army&rdquo; intent on the rape, murder and subjugation of surrounding villages.</p>

<p>This is the irony of discussing privilege: to do so, one must have the degree of privilege which allows for its discussion.</p>

<p>Prior to this, there is only the experience of extreme oppression, which does not provide room for dialogue; productive, civil, antisocial, shrill, or otherwise.</p>

<p>Contrary to popular belief, irony is not always comedic. It has equal standing in tragedy. If nothing else, Aeschylus taught us this. For that matter&hellip; Shakespearean tragedy hinges on irony. The fact that ironic humor is the default mode of irony&hellip; I blame ignorance of classical drama, and hipsters.</p>

<h3>Privilege Checking Is Hard</h3>

<p>One of the things I appreciated about Audrey and Jose&rsquo;s session at EduCon was that it made it much easier to engage in reflection before responding. One of the reasons for my critique of Twitter as a medium for Important Topics was that there&rsquo;s an impetus to reply immediately, without time to reflect. There&rsquo;s also decontextualization, opening oneself up to misinterpretation, etc.</p>

<p>Privilege checking is hard. My first (emotional) response to Tom&rsquo;s post was to this:</p>

<blockquote><p>That was when it occurred to me that he might be speaking from a position of privilege as an educator who is exposed to education discourse. He certainly is an educator who was afforded an opportunity to attend a $200 conference in Philadelphia. His experience is not that of educators in other regions of America and even further from those of educators outside America.</p></blockquote>


<p>My initial reaction was: <em>doesn&rsquo;t that exact analysis apply to everyone in this room?</em></p>

<p>You can read my comment (linked above) which (among other things) explicates the the false assumptions (i.e., that I&rsquo;m an educator) in the post; but that isn&rsquo;t the issue. I&rsquo;m trying <em>really hard</em> to check my privilege in these kinds of conversations. Clearly, though, it&rsquo;s hard for everyone, not just me. We need people to call us out. We need people to help us check our privilege. That&rsquo;s what community is about. What I saw in the session, however, that was different from my typical experience was this: I&rsquo;m going to check my own privilege, then explain how you can do the same. Often, what I&rsquo;ve seen on the interwebs is more along the lines of &ldquo;You need to check your privilege or GTFO.&rdquo;</p>

<p>Sadly, this seems to be about as constructive (albeit far less sexist) as the <a href="http://4chan.org">4chan</a> response of &ldquo;Tits or GTFO.&rdquo;</p>

<h3>Concluding Unscientific Postscript</h3>

<p>Whatever else happened, I think this was one of the most illuminating sessions at EduCon. As I mentioned in my reply to Tom&rsquo;s blog post, I think we in the hacker community can learn things from the way this conversation unfolded in the 90 minutes allotted.</p>

<p>To that end, I&rsquo;d like to suggest to my new friends in the education community, that they might like to engage with some of the folks in the hacker community who are working on this very issue. The following list will include people I&rsquo;ve come to respect and appreciate, and people I&rsquo;ve disagreed with both vehemently and disagreeably. N.B. the two sets pretty much have a 100% intersection, and names might be either IRL or nom de web.</p>

<ul>
<li><a href="https://twitter.com/steveklabnik">Steve Klabnik</a></li>
<li><a href="https://twitter.com/ashedryden">Ashe Dryden</a></li>
<li><a href="https://twitter.com/lindseybieda">Lindsey Bieda</a></li>
<li><a href="https://twitter.com/shanley">Shanley</a></li>
<li><a href="https://twitter.com/wilkieii">Dave Wilkinson</a></li>
</ul>


<p>And anti-oppression hackers, here are some educators you might like to follow:</p>

<ul>
<li><a href="https://twitter.com/audreywatters">Audrey Watters</a></li>
<li><a href="https://twitter.com/TheJLV">Jose Vilson</a></li>
<li><a href="https://twitter.com/mdawriter">Melinda D. Anderson</a></li>
<li><a href="https://twitter.com/ShieldsMolly">Molly Shields</a></li>
</ul>


<p>There&rsquo;s so much more to be done, and so much more to be said. This post deserves a sequel, which I hope I will have time to provide in the near future. I want to address so much more, but I&rsquo;ve already gone on for (prior to these parens, 1,845 words according to <code>wc</code>), and I think that&rsquo;s enough for one post.</p>

<p>I&rsquo;m inclined to see how the comments go and direct my follow-up from there. Thanks for reading, please be civil in the comments, and let&rsquo;s work together to find constructive ways of addressing the issues that lie just beneath the surface in our cultural milieu.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New from Ruby Jokes: taint_aliases]]></title>
    <link href="http://decomplecting.org/blog/2014/01/23/new-from-ruby-jokes-taint-aliases/"/>
    <updated>2014-01-23T20:08:13-05:00</updated>
    <id>http://decomplecting.org/blog/2014/01/23/new-from-ruby-jokes-taint-aliases</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/ruby-jokes">Ruby Jokes</a> team has a new gem for you that was designed, tested, and released in about an hour this afternoon: <a href="http://ruby-jokes.github.io/taint_aliases">taint_aliases</a>. You can get the full details <a href="https://github.com/ruby-jokes/taint_aliases">on GitHub</a>, but I thought a friendly introduction might make for an enlightening blog post.</p>

<h3>Grundle Your Objects</h3>

<p>You see, not everyone prefers the word &ldquo;taint&rdquo;. Some people are very clinical, and say &lsquo;perineum&rsquo;. Others prefer &lsquo;grundle&rsquo; or &lsquo;fleshy fun bridge&rsquo;. We wanted to give you options, so <code>taint_aliases</code> makes a variety of synonyms available to you.</p>

<p><img class="center" src="http://i.imgur.com/7r7Ml5q.png" title="The Most Interesting Taint In The World" ></p>

<!--more-->


<p>With <code>taint_aliases</code>, you can do things like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;taint_aliases&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">Object</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">grundle</span>
</span><span class='line'>
</span><span class='line'><span class="n">obj</span><span class="o">.</span><span class="n">tainted?</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="n">str</span> <span class="o">=</span> <span class="s2">&quot;Foo Bar Baz&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">str</span><span class="o">.</span><span class="n">fleshy_fun_bridge</span>
</span><span class='line'>
</span><span class='line'><span class="n">str</span><span class="o">.</span><span class="n">tainted?</span>
</span><span class='line'>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Of course, there are other options, but you can find them in the documentation.</p>

<h3>Roadmap</h3>

<p>We&rsquo;re currently at version 0.0.3 of <a href="https://rubygems.org/gems/taint_aliases">the gem</a>, but we plan on adding methods like <code>Object#ungrundle</code> and <code>Object#grundled?</code> before the 1.0 release.</p>

<p>Pull requests are welcome, and&hellip; you&rsquo;re welcome.</p>

<p>P.S. Props to <a href="https://github.com/mgates">Micah Gates</a> for work on the codebase and to <a href="https://github.com/milt">Milt Reder</a> for the conception of this gem while we were taking a break at work.</p>

<h3>Update</h3>

<p>Thanks to a well-timed pull request from <a href="https://github.com/threeifbywhiskey">threeifbywhiskey</a>, the milestone listed above has been met, and I just pushed v1.0.0 of the gem. w00t!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Goodbye AT&amp;T, Hello T-Mobile?]]></title>
    <link href="http://decomplecting.org/blog/2013/12/23/goodbye-at-and-t/"/>
    <updated>2013-12-23T21:05:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/12/23/goodbye-at-and-t</id>
    <content type="html"><![CDATA[<p>So I&rsquo;m curious about this <a href="http://guardianlv.com/2013/12/t-mobile-uncarrier-4-0-reportedly-will-buyout-contracts-when-switching/">Uncarrier 4.0</a> thing rumoured to be rolled out by <a href="http://www.t-mobile.com/">T-Mobile</a> in the near future&hellip; I&rsquo;ve considered ditching <a href="http://www.att.com/shop/wireless.html">AT&amp;T Wireless</a> many times, but keep getting dragged back in by upgrades, which seem to take longer and longer to happen.</p>

<p>I tried to get my wife an upgrade for Christmas this year, just to find out <em>both</em> our upgrade dates are far, far in the future&hellip; I&rsquo;m pretty certain we got more frequent upgrades a while back, but the current cycle seems absurd. I was fine with early contract renewals when it meant I got a shiny new phone, but when your renewal date is the same as your upgrade date (24 months), they&rsquo;ve removed all incentive not to switch carriers. Which inidcates to me that perhaps their wireless division is run by idiots, indicating an incentive <em>to</em> switch carriers.</p>

<p>The last counter-incentive to switching is the Early Termination Fee, which, when you&rsquo;re on a family plan and have multiple phones out-of-sync on contract renewal dates, is a bitch to work around. Now, for my part, I&rsquo;m a committed Nexus fan, so I&rsquo;m on an unsubsidised phone anyhow. But with T-Mobile, I can get my Nexus 5 straight from the carrier, Candice can pick out the phone she likes, and we can get more frequent upgrades without a contract.</p>

<!-- more -->


<p>So the real question is, what&rsquo;s the downside?</p>

<p>Well, AT&amp;T does have better overall coverage (and definitely better LTE coverage) than T-Mobile&hellip; for now. But we rarely leave Baltimore except to visit family, and all of the places we do visit family have excellent voice coverage, and we&rsquo;ll be on WiFi at their houses, so&hellip; I&rsquo;m really considering it.</p>

<p>If anyone has made the jump, please let me know in the comments. As soon as T-Mobile rolls out this &ldquo;we&rsquo;ll buy out your contract&rdquo; deal, I&rsquo;m probably ready to jump ship. I&rsquo;ve never had any great love for AT&amp;T, and waiting <em>two years</em> for an upgrade is just stupid. Hell, even getting out of carrier lock-in would be nice, and access to Deutsche Telekom&rsquo;s global data network would be gravy if we start traveling as much as we&rsquo;d like.</p>

<p>Anyhow&hellip; just ruminations for the moment, but&hellip; it could be pretty great.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hour of Code: Voight-Kampff for Hackers?]]></title>
    <link href="http://decomplecting.org/blog/2013/12/11/hour-of-code-voight-kampff-for-hackers/"/>
    <updated>2013-12-11T20:20:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/12/11/hour-of-code-voight-kampff-for-hackers</id>
    <content type="html"><![CDATA[<p>So, <a href="http://gizmodo.com">Gizmodo</a> has a great post on the new series of <a href="http://code.org">Code.org</a> PSAs, <a href="http://gizmodo.com/people-who-did-not-get-rich-and-or-famous-coding-want-y-1479863703">&ldquo;People Who Did Not Get Rich and/or Famous Coding Want You to Code&rdquo;</a>. I think <a href="http://csedweek.org/">Computer Science Education Week</a> is a fantastic idea (although IMHO every week should be CSEdWeek), but the whole &ldquo;hour of code&rdquo; thing seemed slightly silly, until now.</p>

<p>Okay, the PSAs keep it silly. Every time someone in those videos says &ldquo;I just did <em>n</em> lines of code&rdquo;, the following script runs through my head:</p>

<figure class='code'><figcaption><span>&#8220;Yeah, this&#8230;&#8221; </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;I just did </span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2"> lines of code&quot;</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/code/</span><span class="p">,</span> <span class="s1">&#39;coke&#39;</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;, and I can&#39;t feel my face!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yeah, I&rsquo;m a terrible person. Also hilarious. Moving on&hellip;</p>

<!-- more -->


<h3>Hacker Exceptionalism</h3>

<p>Usually, the term <a href="http://en.wikipedia.org/wiki/Exceptionalism">Exceptionalism</a> is used in a context of superiority, e.g., <a href="http://en.wikipedia.org/wiki/American_exceptionalism">American exceptionalism</a>. I do believe there is something like &ldquo;hacker exceptionalism&rdquo;, except the &ldquo;exception&rdquo; has nothing to do with superiority, but literally an exceptional case — a corner case for life, if you will.</p>

<p>There&rsquo;s something weird about hackers. I&rsquo;m not lumping everyone who writes code for their day job into this category (frankly, that would be offensive to my sensibilities). I&rsquo;ve written <a href="http://decomplecting.org/blog/2012/05/22/passion/">before</a> about my encounters with people who just code 9 to 5 and then don&rsquo;t think about it and all I can say now is that I wish they would stop (actually, I&rsquo;m not sure many of them think about it at all).</p>

<p>People who grok code have weird brains. That&rsquo;s the theory. It&rsquo;s not new; in <a href="http://www.nealstephenson.com/snowcrash/"><em>Snow Crash</em></a>, Neal Stephenson describes a neurolinguistic virus that can infect the brains of hackers via digital images because of the pathways coding has created in their brains.</p>

<p>There&rsquo;s a chicken-and-egg problem here: are our brains weird because we&rsquo;re hackers, or are we hackers because our brains are weird?</p>

<p>I&rsquo;m not sure there&rsquo;s any way to answer that scientifically until we have longitudinal studies complete with periodic fMRI scans of children as they develop into programmers (or not). So we&rsquo;ll leave the origin story aside for now.</p>

<h3>Voight-Kampff</h3>

<p>In the movie <a href="http://en.wikipedia.org/wiki/Blade_Runner"><em>Blade Runner</em></a> (apologies to Philip K. Dick fans for heading down this particular rabbit-hole), a test called <a href="http://bladerunner.wikia.com/wiki/Voight-Kampff_machine">Voight-Kampff</a> is administered to distinguish humans from replicants.</p>

<p>The idea of a Voight-Kampff test to distinguish humans from hackers isn&rsquo;t new either; in 2006, researchers proposed an (apparently) effective test to separate <a href="http://www.codinghorror.com/blog/2006/07/separating-programming-sheep-from-non-programming-goats.html">programming sheep from non-programming goats</a>.</p>

<p><span class='pullquote-right' data-pullquote='Then I realized: this is like a Voight-Kampff test for hackers.'>
So this &ldquo;Hour of Code&rdquo; thing. I thought it was a cute idea at first, became dubious, got annoyed at the marketing, and stopped paying attention until the new batch of PSAs were covered on Gizmodo (full confession: I was reading <a href="http://valleywag.gawker.com/">Valleywag</a> when I saw it. I can&rsquo;t help myself). Then I realized: this is like a Voight-Kampff test for hackers. My first &ldquo;hour of code&rdquo; was when I was five. that hour stretched into three. Then countless hours followed. For the rest of my life.
</span></p>

<p>The whole &ldquo;everyone should learn to code&rdquo; meme is great; I think everyone should understand the fundamentals of computer science. Not that &ldquo;learning to code&rdquo; is equivalent to &ldquo;understanding CS fundamentals,&rdquo; but it&rsquo;s a step in the right direction. But it&rsquo;s important to distinguish between &ldquo;learning to code&rdquo; and &ldquo;entering a career in software engineering.&rdquo;</p>

<p>I wish the latter were left to true hackers. The ones who are outed by the &ldquo;hour of code&rdquo; when the hour turns into 10,000 hours; the ones who go from &ldquo;I did 5 lines of code!&rdquo; to &ldquo;I did 5k LOCs&rdquo; in about two weeks. That&rsquo;s not going to be everyone. It&rsquo;s going to be a distinct minority. We&rsquo;re corner cases.</p>

<p>Code.org has some great goals, even if the motives seem questionable at times (does it feel to anyone else like &ldquo;everyone should learn to code&rdquo; is in some cases an attempt to rekindle the failed 1990&rsquo;s experiment of &ldquo;commodity programmers&rdquo;?). More than anything else, though, &ldquo;hour of code&rdquo; seems to intorduce a <code>catch</code> block for those of us who throw <code>HackerBrainException</code>. And that&rsquo;s great. Uncaught exceptions aren&rsquo;t good for anyone. This is why we need <a href="http://www.computinginthecore.org/">computing in the core</a> — it&rsquo;s like checked exceptions in the API for public education.</p>

<h3>Computer Science in K-12</h3>

<p>This is the real issue, isn&rsquo;t it? Getting computer science into the standards for K-12 education? Making an &ldquo;hour of code&rdquo; redundant?</p>

<p>Sadly, things don&rsquo;t seem to have changed much since my own <a href="http://decomplecting.org/blog/2013/06/02/were-not-ready-to-teach-kids-to-code/">negative experiences with coding at school</a>&hellip; but that was in the late 1990&rsquo;s. I would have expected progress since then&hellip; if I were a lot more naïve.</p>

<p>So a message to current students: <strong>Fortuna audaces iuvat</strong> — Fortune favors the bold. Hack everything. Code your math homework. Shit, code your math homework, put hte source on <a href="https://github.com">Github</a>, and let your friends <em>copy</em> that shit. Refuse to do anything without a computer, whether that computer is your phone or a <a href="http://www.cray.com/Products/Computing/XE.aspx">Cray XE6</a>.</p>

<p>If your school doesn&rsquo;t offer CS classes, start your own. <a href="http://decomplecting.org/blog/2013/11/12/just-get-hacking/">Just get hacking</a>. If you throw <code>HackerBrainException</code>, you&rsquo;ll never stop.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apple: The Obstacle to America's Future?]]></title>
    <link href="http://decomplecting.org/blog/2013/12/09/apple-the-obstacle-to-americas-future/"/>
    <updated>2013-12-09T22:32:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/12/09/apple-the-obstacle-to-americas-future</id>
    <content type="html"><![CDATA[<p>In a brief address to kick off Computer Science Education Week (In conjunction with <a href="http://code.org">Code.org</a>), President Obama called on the nation&rsquo;s youth to give coding a chance:</p>

<iframe width="560" height="315" src="//www.youtube.com/embed/6XvmhE1J9PY" frameborder="0" allowfullscreen></iframe>


<p>It&rsquo;s an understandable, if questionable, sentiment. I&rsquo;ve previously addressed the <a href="http://decomplecting.org/blog/2013/06/02/were-not-ready-to-teach-kids-to-code/">questionable wisdom, and pitfalls</a>, of the &ldquo;teach every kid to code&rdquo; movement. At the same time, computational literacy is so paramount thate ven learning enough about coding to know whay you <em>don&rsquo;t</em> want to do it seems valuable. But I am a champion of CS education in K-12, so I like the overall tenor of that brief address. But it got me thinking about one of the most egregious roadblocks to progress in software within our economy: Apple.</p>

<!-- more -->


<p><span class='pullquote-right' data-pullquote='Don&#8217;t just download the latest app. Help design it. Don&#8217;t just play on your phone. Program it.'>
The president&rsquo;s exhortation was especially interesting in one very specific regard: the spot at 0:32 where he encourages, Don&rsquo;t just download the latest app. Help design it. Don&rsquo;t just play on your phone. Program it. Well&hellip; I like where this is going, but&hellip; it&rsquo;s not that easy, Mr. President. I&rsquo;m all for anyone ,with the slightest interest, screwing around with code and learning new things. And if you&rsquo;ve got an Android phone (among others, but I&rsquo;m trying to keep this simple), that&rsquo;s great. You can download <a href="http://developer.android.com/sdk/installing/studio.html">Android Studio</a> from <a href="https://google.com">Google</a>, for free. You can put your phone in developer mode, and install whatever you want. Easy peasy. And hey, want to distribute that to your friends? Pay $25, one time, you&rsquo;re set.
</span></p>

<p>If you&rsquo;re locked into Apple&rsquo;s totalitarian ecosystem, alas, it&rsquo;s not that easy. You&rsquo;ll need to pay US$99 per year for the privelege of running your own code on your own device. And should you want to publish that? Well, Apple&rsquo;s going to review and nitpick and make sure <em>they</em> want it in their store. And charge <em>you</em> for the privilege of having the opportunity to add value to their platform. And hell, if your friends are at all savvy and have Android phones, just send them the APK or (even better), open source your project and let them build it themselves. This all works great on Android. On iOS&hellip; not so much.</p>

<p>I sometimes go overboard giving my friends with iOS devices a hard time. It&rsquo;s almost as bad as when Windows was still relevant and I was pushing Linux on everyone. It&rsquo;s about <em>freedom.</em> Just like with Windows back in the day, the constant reply is one of:</p>

<ol>
<li>I don&rsquo;t need to code for/have control over my device, this works fine for me.</li>
<li>But I&rsquo;ve waaaasted so much money on aaaaaps!!!!</li>
</ol>


<p>Welcome to vendor lock-in. It&rsquo;s no excuse, and if we <em>really</em> care about the next generation becoming hackers and makers, not just consumers, we need to reject Apple&rsquo;s bullshit, reject Micorsoft&rsquo;s (decreasingly relevant) bullshit, and focus on open systems. This doesn&rsquo;t have to be Android. <a href="http://www.ubuntu.com/phone">Ubuntu Phone</a> looks promising, <a href="http://www.mozilla.org/en-US/firefox/os/">Firefox OS</a> <em>might</em> not be more Mozilla vaporware, and <a href="http://jolla.com/">Jolla</a> looks incredibly promising.</p>

<p>But what Apple lacks in marketshare, it maintains in mindshare. You want irony?</p>

<iframe width="420" height="315" src="//www.youtube.com/embed/VtvjbmoDx-I" frameborder="0" allowfullscreen></iframe>


<p>In 1984, Big Brother was IBM. Now when I watch this, I see a WWDC keynote.</p>

<p>I don&rsquo;t think iOS is compeltely ill-conceived. Almost, but not completely. But if Apple will not open their platform, and their ecosystem, they are not helping to encourage the next generation of makers, and they are encouraging precisely the opposite attitude toward software that <a href="http://code.org">Code.org</a> and <a href="http://csedweek.org/">Computer Science Education Week</a> were founded to promote.</p>

<p>If I may be permitted to pay tribute to Marcus Cato, I will simply conclude by stating:</p>

<h3>POMUM DELENDA EST</h3>

<p><strong>Update:</strong> There&rsquo;s some lively discussion on <a href="https://news.ycombinator.com/item?id=6878922">Hacker News</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Matters - Followup]]></title>
    <link href="http://decomplecting.org/blog/2013/11/20/github-matters-followup/"/>
    <updated>2013-11-20T23:36:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/11/20/github-matters-followup</id>
    <content type="html"><![CDATA[<h4>Mea Culpa</h4>

<p>I made some mistakes in my last post. First off, I&rsquo;d like to apologize to <a href="http://ashedryden.com/">Ashe Dryden</a> for referring to her as Ms. Dryden while I referred to <a href="http://jcoglan.com/">James Coglan</a> by his full name. I had no intention of explicitly implying Ashe&rsquo;s gender; my usual writing style is to refer to people by their full name initially and to use an approrpiate title thereafter. But upon review I realized I referred to Ashe as &ldquo;Ms. Dryden&rdquo; in subsequent references, while I referred to James Coglan as &ldquo;James Coglan&rdquo; both times I mentioned him.</p>

<p>I&rsquo;m sorry about that. It was an oversight, and if I had been paying better attention, the second reference to Mr. Coglan would have been &ldquo;Mr. Coglan&rdquo; for parity. But as I failed to achieve parity, and Ashe expressed that she preferred &ldquo;Ashe Dryden&rdquo; to &ldquo;Ms. Dryden&rdquo; in general, I decided to <code>s/Ms./Ashe/g</code> the post. It is now corrected.</p>

<!-- more -->


<h4>I missed some things</h4>

<p>My post was mostly in response to the <a href="https://blog.jcoglan.com/2013/11/15/why-github-is-not-your-cv/">Github Is Not Your CV</a> sentiment, as well as the <a href="https://news.ycombinator.com/item?id=6728417">Hacker News comments</a> related to Ashe&rsquo;s post, rather than the diversity/privilege statistics offered by Ashe&rsquo;s <a href="http://ashedryden.com/blog/the-ethics-of-unpaid-labor-and-the-oss-community">original article</a>. I had no intention of discounting the privilege issues involved in having the time and resources to contribute to OSS or produce original experiments/libraries/applications on <a href="https://github.com">Github</a>.</p>

<p>I didn&rsquo;t disagree with any of that. I still think it&rsquo;s a good idea to make projects public and make that part of your portfolio. I never suggested that hiring managers should use Github as the only criterion&hellip; but I do think it demonstrates a commitment to professional development, to honing your craft.</p>

<p>I&rsquo;m curious if the cited statistics on OSS contributions refer to &ldquo;have commits to major OSS projects&rdquo; or &ldquo;have code samples online.&rdquo;</p>

<p>My reference was to the latter. Not that I wouldn&rsquo;t love to hire people with commits to Rails or core.async; but for the most part, I want to see what you build in your spare time. Your production code is probably proprietary and covered by an NDA. So I want to see what I <em>can</em> see.</p>

<p>If you don&rsquo;t have a Github profile, that&rsquo;s okay. We can still talk. Either way, I&rsquo;m probably going to want to pair with you or give you a take-home assignment before the next interview round. Those are great ideas that both Ashe and James proposed as alteratives to Github reviews.</p>

<p>I see them more as complements than alternatives, but ideally seeing both would be wonderful.</p>

<p>I still love Github as part of the screening process. Especially if your Github is messy. I can see the crappy Rails CMS you wrote two years ago as practice, and the Clojure OAuth library you comitted to last week, and see the growth you&rsquo;ve made in that time. That&rsquo;s the value of Github to me.</p>

<p>I want to see professional development, not unpaid labor. I want to know you <em>don&rsquo;t consider hacking labor, but play.</em> Not because I want you to work 80 hours a week; I don&rsquo;t, because that&rsquo;s the road to burnout. But I want to know you love this shit and, in a socialist utopia, would do it for free.</p>

<h4>Damn reality</h4>

<p>Yeah, I know hacking on OSS is a privilege we don&rsquo;t all enjoy. Neither is going to college or learning to code. These are all things we need to improve access to as a community, but the nice thing about Github, pairing, and code challenges, is that they can balance out hte privilege issues of college and other factors. For me, as a hiring hacker, I care more about work than degrees. Github is one way to show that, but pairing etc. are equally valid.</p>

<h4>Conclusion</h4>

<p>OSS hacking is a privilege: I&rsquo;ve done a fuckton less since I had a kid; mostly work-related stuff. But it still matters, and it&rsquo;s accessible to anyone with a computer and an internet connection. That in and of itself is discriminatory, but I can&rsquo;t see how you&rsquo;re going to be a hacker to begin with sans those things.</p>

<p>I think my main objection is the Harrison Bergeron argument: we&rsquo;re using statistics about privilege to say &ldquo;let&rsquo;s not use this (IMHO) valid metric because the privileged have access to this resource&rdquo; instead of &ldquo;how can we change society to improve access to this resource.&rdquo;</p>

<p>Yeah, the second proposition is harder. And you can discount the utility of the metric like James Coglan, or reject the premise like Ashe Dryden, but in either case there is a realpolitik question:</p>

<ol>
<li>Hiring managers see value in this metric.</li>
<li>Some of them probably have valid reasons for this.</li>
<li>Access is influenced by social privilege.</li>
<li>We can either (a) throw the baby out with the bathwater, or (b) try to address the underlying issue.</li>
</ol>


<p>The typical response is 4(a), for whatever reason. I&rsquo;d like to see 4(b), but I don&rsquo;t know how to make it happen. I&rsquo;d rather see theories on how this can be achieved than see strategies and arguments for 4(a).</p>

<p>Anyhow, like I said&hellip; the statistics are damning, but I&rsquo;d rather see the statistics change. How do we get more women into open source? I think OSS contributions have value as one factor among many, but I also think it&rsquo;s a value for <em>the individual developer,</em> not just as a hiring criterion. The low contribution ratio of women and minorities to OSS is the problem, not the fact that it&rsquo;s a metric used for candidate evaluation. But that&rsquo;s a whole different issue, and I don&rsquo;t have an answer for fixing that&hellip; yet.</p>

<p><strong>tl;dr apologies to Ashe; inequality and privilege are real; fix society, don&rsquo;t discount the value of OSS/Github contributions</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So Github Is Not Your CV.  It Still Matters]]></title>
    <link href="http://decomplecting.org/blog/2013/11/19/so-github-is-not-your-cv-it-still-matters/"/>
    <updated>2013-11-19T21:22:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/11/19/so-github-is-not-your-cv-it-still-matters</id>
    <content type="html"><![CDATA[<p>It&rsquo;s funny, a few days before the OSS-as-hiring-criteria debate emerged on Twitter and HN — mostly stemming from <a href="http://david.heinemeierhansson.com/2013/the-perils-of-mixing-open-source-and-money.html">this post</a> by <a href="https://twitter.com/dhh">DHH</a> and <a href="http://ashedryden.com/blog/the-ethics-of-unpaid-labor-and-the-oss-community">this post</a> by <a href="https://twitter.com/ashedryden">Ashe Dryden</a> — I had just posted <a href="http://decomplecting.org/blog/2013/11/13/just-get-hacking-part-2/">Just Get Hacking (Part 2)</a>, encouraging prospective developers lacking a CS background who wanted to get hired to <strong>put lots of code on Github.</strong></p>

<p>There are good counterarguments to this. Github is not a portfolio, it&rsquo;s where your public code lives. <a href="https://github.com/canweriotnow">My Github</a> has a bunch of projects I should maybe delete; stalled or abandoned projects, one-off projects with poor test coverage, etc. It&rsquo;s not really a representative sample of my <em>production</em> code. But that&rsquo;s not why I think it matters.</p>

<p>In her post, Ashe provides several excellent alternatives to OSS contributions as evaluation criteria; these include:</p>

<ul>
<li>Pair with the prospective hire</li>
<li>Contract the prospective hire for a week or two</li>
<li>Ask for samples</li>
</ul>


<p>When considering potential hires, Github is not everything. At <a href="http://anestuary.com">An Estuary</a>, we definitely request (and prefer) a Github profile with applicant CVs; but it&rsquo;s not about contributions to OSS projects (i.e., the &ldquo;unpaid labor&rdquo; critiqued in Ashe Dryden&rsquo;s post).</p>

<p>The focus of our company is on professional development. We not only dogfood technically (i.e., using our own software), but also culturally. We want to hire people who are focused on their own professional development, and Github is a good place to document that.</p>

<p>(Also&hellip; code samples? If you wrote something worth showing me, why isn&rsquo;t it on Github, in a gist, on JSFiddle, etc.?)</p>

<p>Our main product is designed to help educators document their professional development. Hackers like us have Github, so if we&rsquo;re not using it&hellip; something might be amiss.</p>

<p>So when I&rsquo;m looking at a Github profile evaluating a potential hire, I&rsquo;m not looking for accepted pull requests to <a href="https://github.com/rails/rails">Rails</a>. I mean, that would be a plus, but&hellip;</p>

<!--more-->


<h3>A Commitment to Professional Development</h3>

<p>That&rsquo;s what I want to see. Not a portfolio, as <a href="http://blog.jcoglan.com/2013/11/15/why-github-is-not-your-cv/">James Coglan suggests</a>. He&rsquo;s not wrong, but as a hiring hacker, at least from my perspective, he misjudges the value of Github profiles.</p>

<p>For me, evaluating Github profiles for potential hires is about a commitment to a <em>profession.</em> And that&rsquo;s not something that&rsquo;s real in software at the moment, but it&rsquo;s something we need to develop.</p>

<p>If building software is <em>just a paycheck,</em> I don&rsquo;t really want to work with you. No offense, I&rsquo;m sure there are plenty of organizations out there that are fine with that. You should work for them. I have, and I hated it, but find your own bliss. I don&rsquo;t want you to miss out on family and kids and friends; I don&rsquo;t want to miss out on those either. But in those couple of hours between the kids going to bed and sleep closing in&hellip; well, I&rsquo;m hacking away on some odd side project, and that&rsquo;s who I want by my side while we&rsquo;re trying to hack things better.</p>

<p>There&rsquo;s a conflation of OSS contributions (i.e., unpaid labor contributing to free software your company or prospective company uses to make a profit) and having a Github (or Bitbucket or whatever) account that demonstrates a commitment to honing your craft over time. Both are admirable, but I want to hire smart people who are committed to always be learning. Github is a good way to demonstrate that quality, even if yours (like mine) is full of projects that went nowhere.</p>

<p>Sorry, I need evidence of commitment. If you have patches in or Rails or clojure.core that&rsquo;s bonus points. But your commitment is what matters to me:</p>

<blockquote class="twitter-tweet" lang="en"><p>Timeframes in which you cannot become a good programmer: 2 weeks; 2 months; 2 years. Sorry. 10,000 hours. Not my fault. Sorry.</p>&mdash; Gary Bernhardt (@garybernhardt) <a href="https://twitter.com/garybernhardt/statuses/397833212019232769">November 5, 2013</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>10,000 hours. That&rsquo;s what it takes. Not that you&rsquo;ve put that time in already, but I need to believe you&rsquo;re committed to putting the time in. Sorry if that&rsquo;s a hardship. There are other jobs.</p>

<p>Now I&rsquo;m close to sounding like a jerk, but it&rsquo;s just the reality. If I was a flight instructor who certified a pilot who hadn&rsquo;t put in their hours, I&rsquo;d be criminally negligent. Software matters too. Just look at <a href="http://healthcare.gov">healthcare.gov</a></p>

<h3>Privilege isn&rsquo;t just about OSS</h3>

<p>One of the main points of Ashe Dryden&rsquo;s article is that OSS is dispropotionally authored by privileged groups, i.e. young white males. While this is clearly backed by the data, the reasons for this are not limited to the software industry; most professions (and yes, I am considering software engineering a profession) have similarly disproportionate distributions. <a href="http://www.nalp.org/minoritieswomen">Lawyers</a> and <a href="http://nces.ed.gov/fastfacts/display.asp?id=72">doctorates in general</a> skew in the same direction. Why? For the same reasons addressed in the argument against OSS as hiring criteria: young white males disproportionately have the free time and resources available to pursue advanced degrees, attend professional school, etc.</p>

<p>Now, in software, we have an edge case in which a degree isn&rsquo;t necessarily required in the first place. But something has to stand in for that, doesn&rsquo;t it? Some demonstration of competency?</p>

<p>I think this was one of the more salient points made in <a href="https://news.ycombinator.com/item?id=6728417">the Hacker News thread</a> on Ashe Dryden&rsquo;s post — all hiring criteria are discriminatory in one way or another, e.g. requiring a Master&rsquo;s degree discriminates against people with only a Bachelor&rsquo;s — and surprise, surprise, individuals privileged by race or gender are more likely to secure the higher degree.</p>

<p>So I think the &ldquo;Github hiring criterion&rdquo; is a bit of a red herring. Privilege is an issue across the board, and it really has nothing to do with OSS or Github profiles. I&rsquo;m in my first hiring role as a developer, but I find reviewing applicants&#8217; Github profiles incredibly useful; not as in &ldquo;we will talk to this person but not this other one,&rdquo; but guiding what questions to ask and what paths to explore in the interview.</p>

<p>tl;dr Hiring people is hard. Github provides <em>limited</em> data to drive those decisions. It&rsquo;s easier to make confident decisions with more data.</p>

<h5><em>Postscript</em></h5>

<p>If Github is privilegey, than what is <a href="http://careers.stackoverflow.com/">Careers 2.0</a>? You either need an awesome Github rep or <a href="http://stackoverflow.com">StackOverflow</a> karma <em>just to get a profile.</em> And answering James Coglan&rsquo;s critique — Careers 2.0 actually <em>is</em> a portfolio; you feature your best Github repos, best blog posts, etc.</p>

<p>Maybe another time I&rsquo;ll go into <a href="http://coderwall.com">Coderwall</a> or <a href="http://coderbits.com">Coderbits</a> as alternatives.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just Get Hacking (Part 2)]]></title>
    <link href="http://decomplecting.org/blog/2013/11/13/just-get-hacking-part-2/"/>
    <updated>2013-11-13T00:09:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/11/13/just-get-hacking-part-2</id>
    <content type="html"><![CDATA[<h3>The Important Stuff</h3>

<p>So <a href="http://decomplecting.org/blog/2013/11/12/just-get-hacking/">last post</a>, I pretty much said &ldquo;just do it,&rdquo; and explained that the companies you <em>want</em> to hire you will care less about your background than your demonstrable coding skills.</p>

<p>In this post, I want to look a little more closely at the skills that matter, and the specific areas that the &ldquo;best&rdquo; (IMHO) companies will focus on. I may be biased, but this is the stuff I care about when I&rsquo;m interviewing developers (beyond basic coding chops), and I think I&rsquo;m pretty smart.</p>

<h3>Testing, Testing, Testing</h3>

<p>So you&rsquo;re writing code that runs, runs correctly, and runs consistently. That&rsquo;s awesome. But when it comes to writing production code for a real company, you need to <em>know</em> it&rsquo;s correct, in advance. Especially with dynamic languages, when there&rsquo;s no compiler to refuse to build faulty code, testing is paramount.</p>

<p>So when you&rsquo;re working on these little personal projects, and throwing them on <a href="https://github.com">Github</a>, do a few things:</p>

<!-- more -->


<ul>
<li>Write tests. If you&rsquo;re using Ruby, I recommend <a href="http://rspec.info/">RSpec</a>.</li>
<li>Use <a href="https://travis-ci.org/">Travis CI</a>. You&rsquo;ll learn about <a href="http://martinfowler.com/articles/continuousIntegration.html">continuous integration</a>, and it&rsquo;s free for open source.</li>
<li>Use <a href="https://codeclimate.com/">Code Climate</a>. It&rsquo;s like automated code review, and also free.</li>
<li>Try <a href="https://coveralls.io/">Coveralls</a>. It&rsquo;ll help you make sure you actually are testing everything.</li>
</ul>


<p>Plus Travis, Code Climate, and Coveralls will give you little badges for your README.md on Github so you can see how your project is doing at any time.</p>

<p>Read up on practices for <a href="http://en.wikipedia.org/wiki/Test-driven_development">Test-Driven Development</a>, because it matters to the people you really want to work for, and as an aspiring software craftsman, it needs to matter to you.</p>

<h3>Collaboration</h3>

<p>I mentioned the importance of coding with others last post, but I can&rsquo;t emphasize it enough. Look for opportunities for pair programming, even if it&rsquo;s remote. There are cool apps you can use for that now, like <a href="https://koding.com/">Koding</a> (and others), but in a pinch there&rsquo;s always <a href="http://www.vim.org/">vim</a> and <a href="http://tmux.sourceforge.net/">tmux</a>&hellip; which are tools you&rsquo;ll want to know anyhow.</p>

<p>And which brings me to my next point&hellip;</p>

<h3>Unix or GTFO</h3>

<p>Yeah, code is more portable than it has ever been. You can develop Ruby or Clojure or Node.js on Linux, Solaris, OS X, Windows, probably even Haiku&hellip; but you need to understand your deployment environment, which is going to be some kind of *nix unless you&rsquo;re doing .NET (which you&rsquo;re clearly not, if you came to me for advice).</p>

<p>In addition, the closer your dev environment is to your production environment, the less risk there is of weird heisenbug inconsistencies.</p>

<p>So learn <em>some</em> kind of *nix, whether it&rsquo;s OS X, Linux, or Solaris, or whatever. And dig down; use the command line. Learn your tools, learn the <code>git</code> command line, don&rsquo;t just rely on the Github GUI apps etc. Learn <code>bash</code> or <code>zsh</code>. Learn how a combination of <code>find</code>, <code>grep</code>, and <code>xargs</code> can save your ass. It&rsquo;ll make your life easier as a developer, and it&rsquo;s vital when it comes to&hellip;</p>

<h3>DevOps</h3>

<p>Long ago, in a galaxy far, far, away, developers simply wrote application code and the systems that hosted and served that code were managed by a cabal of wizened neckbeards of the Sysadmin clan. Now, in our more enlightened (or is it benighted?) age, development and operations have blurred their lines and DevOps was born.</p>

<p>In many cases, this is just an excuse for developers to be burdened with sysadmin duties; sometimes, it&rsquo;s perfectly sensible as many of the best deployment options are SaaS (Something-as-a-Service) thingamabobs. But it&rsquo;s important to get at least the basics.</p>

<p>So when you&rsquo;re looking for someplace to put your pet project web apps, put them on <a href="http://heroku.com">Heroku</a>. It&rsquo;s free for a single web dyno and no workers, and many of the &ldquo;add-ons&rdquo; (like Postgres, Redis, ElasticSearch, etc.) that are technologies you might want to play with have free tiers as well.</p>

<p><a href="http://aws.amazon.com/">Amazon Web Services</a> is Level 80 territory as far as I&rsquo;m concerned, but if you get into the DevOps thing, and want to experiment with tools like <a href="http://www.opscode.com/chef/">Chef</a>, they&rsquo;ll also give you some free time with EC2 instances to play around.</p>

<h3>Summary</h3>

<p>It all comes down to &ldquo;Just Get Hacking&rdquo;. But there are some specifics prereqs for modern software engineering, and if you can make yourself pick those up along the way, all the better. Keep it fun, and keep learning. That&rsquo;s what matters most.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just Get Hacking]]></title>
    <link href="http://decomplecting.org/blog/2013/11/12/just-get-hacking/"/>
    <updated>2013-11-12T00:27:00-05:00</updated>
    <id>http://decomplecting.org/blog/2013/11/12/just-get-hacking</id>
    <content type="html"><![CDATA[<p><em>This post is a follow up to a previous entry, <a href="http://decomplecting.org/blog/2013/09/29/letter-to-a-young-or-new-programmer/">&ldquo;Letter to a Young (Or New) Programmer&rdquo;</a>.</em></p>

<p>So you&rsquo;ve been working through some of those excellent online resources, like <a href="http://learncodethehardway.org/">Learn Code The Hard Way</a>, or <a href="http://codeschool.com">Code School</a>, or whatever. You think you can build something now, and you want to get out there in the world and hack things better, but there&rsquo;s this one little problem&hellip; you have a degree in Philosophy or Psychology or no degree at all, and no résumé-worthy coding experience.</p>

<h4>Not. A. Problem.</h4>

<p>Well, not necessarily a problem. There&rsquo;s an easy solution. Just. Get. Hacking.</p>

<p>So you don&rsquo;t know about XP, Agile, Scrum, Kanban, Waterfall&hellip; there&rsquo;s always <a href="http://programming-motherfucker.com/">Programming, Motherfucker</a>.</p>

<p>So you haven&rsquo;t built an Enterprise Expert System with the AbstractVisitorFactoryAntiPatternCringeGenerator pattern&hellip; I told you to make an account on <a href="https://github.com">Github</a>, didn&rsquo;t I? And I know you take my advice because you&rsquo;re building actual goddamn software.</p>

<p>Put your stuff on Github. Ask for help on IRC.</p>

<p>Find projects that interest you, fork &lsquo;em, submit pull requests. Lots of projects even have issues labeled as &ldquo;suitable for n00bs&rdquo;.</p>

<!-- more -->


<h4>The Enterprise Dilemma</h4>

<p><span class='pullquote-right' data-pullquote='I can tell you something about those places. You don&#8217;t want to work there.'>
Okay, sure. There are places out there that care more about your résumé and pedigree than your coding chops. I can tell you something about those places. You don&rsquo;t want to work there. I mean, getting your foot in the door is a good thing and all, but in the long run, you&rsquo;ll hate your life and maybe even learn to hate coding, and I don&rsquo;t want to see you go down that road. There are so many of us who narrowly escaped that kind of enviroment that we could form our own support group. Don&rsquo;t even worry about it.
</span></p>

<p>Any shop worth working at cares so much more about your coding chops, your potential, your intelligence than bullshit like résumés and academic credentials that if you can demonstrate your ability and still don&rsquo;t get the job, it&rsquo;s a blessing.</p>

<p>On the other hand, you <em>do</em> need a first coding job. And if you&rsquo;re not getting it based on your Github activity, you&rsquo;re probably getting it based on nepotism.</p>

<p>How does this happen? Still goes back to Github, IRC, meetups, etc. So go to some meetups. Talk to people, go to the pub nights, go to the open hack nights. Hack on open source projects, submit pull requests, get in on some projects that will get you recognized. Eventually, you&rsquo;ll have hacker friends who will hire you or recommend you to take over their shitty Enterprise jobs that you can use to build your résumé should you go down that route. It&rsquo;s not that hard. Hang out with nerds, learn the craft, make connections. Programming is one of the few fields where it really is <em>what you know,</em> but who you know can help too. But those connections are best made by being a badass hacker.</p>

<h4>Open Source is the Key</h4>

<p>At the end of the day, though, even if you do all sorts of networking at confs and meetups and the like, you need a strong presence in the Open Source community. I can&rsquo;t emphasize this enough: <strong>PUT YOUR CODE ON GITHUB.</strong></p>

<p>Or Bitbucket or whatever if you prefer, but open source that shit, get other people involved, and get involved in other people&rsquo;s projects.</p>

<p>I&rsquo;m in the position of having to evaluate and hire developers at <a href="http://anestuary.com">An Estuary</a>, and since I want to run the dev shop I wish existed, I&rsquo;m trying to hire that way. When we list positions, we require a Github URL because I want to see what you do, not what your former employers think of you. I assume they&rsquo;re &ldquo;former&rdquo; (or soon-to-be &ldquo;former&rdquo;) for good reason. When we interview you, I want to talk about your code, not your former supervisor&rsquo;s probable inferiority complex.</p>

<p>In summary, just get hacking. Just keep hacking. Build cool shit. Show it to the world. Talk to other nerds. Maybe try some remote pairing (Tweeting with the hashtag #pairwithme is often productive). But just make stuff. Then show me what you can do when you want a job. If you start off with a great company, that should be all you need.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maybe EdTech Is Another Leaky Abstraction]]></title>
    <link href="http://decomplecting.org/blog/2013/09/30/maybe-edtech-is-another-leaky-abstraction/"/>
    <updated>2013-09-30T20:26:00-04:00</updated>
    <id>http://decomplecting.org/blog/2013/09/30/maybe-edtech-is-another-leaky-abstraction</id>
    <content type="html"><![CDATA[<p>Working in the EdTech sector, I&rsquo;m perpetually vexed as I try to determine what exactly &ldquo;EdTech&rdquo; is and, <em>a fortiori,</em> what <em>effective</em> EdTech should look like. Perhaps a little background might be in order.</p>

<p>As I&rsquo;ve mentioned before, my academic training is in philosophy. Computer Science was more of an avocational intellectual pursuit because I enjoyed math and symbolic logic. Life is full of surprises, eh?</p>

<p>One of the fundamental divisions in philosophy is between &ldquo;analytic&rdquo; and &ldquo;continental&rdquo; philosophy. These are vague and overlapping spheres, but the reduction comes down to whether philosophy is the handmaiden of science (analyitc school), or whether philosophy is something larger with a complex (sometimes supportive, sometimes critical) relationship with science.</p>

<p>I fell firmly on the &ldquo;continental&rdquo; side, for the most part. It was always the critical power of philosophy that fascinated me. So, what does this have to do with EdTech?</p>

<!--more-->


<h3>Technology as the Handmaiden of Education</h3>

<p>This is the problem. Our typical view of &ldquo;educational technology&rdquo; is that we can produce technological tools to support the same tried, tired pedagogical techniques that have (sort of) worked (for a minority of the population) for decades.</p>

<p>This is wasteful. This is stupid, and also wrong.</p>

<p>In business, where technology has succeeded it has done so because it has revolutionized practices, made redundant unnecessary labor, and increased efficiency by many orders of magnitude. I&rsquo;ll (graciously) bracket off my opinions about the unfair distribution of the gains in productivity, for the sake of brevity and focus.</p>

<p>Likewise in science, our rate of accumulation of knowledge about the physical world has increased exponentially, not because we have expected technology to serve the same processes that we accepted as &ldquo;best practices&rdquo; back when we had only stone knives and bear skins to work with, but because the rate of technological progress has disrupted (improved) the very processes by which scientific discovery occurs.</p>

<p>Now, as (to borrow from both Marcuse and Heidegger) technology is very specifically the <em>science</em> of <em>technics,</em>
it might be argues that the sciences are the least &ldquo;disrupted&rdquo; by technological advancement; for the most part, they are themselves advanced. But paradigm shifts in technology have played a role in the Kuhnian paradigm shifts in scientific understanding as well.</p>

<h3>And Education?</h3>

<p>First, let us agree that education is no science, not even a &ldquo;soft science&rdquo; like sociology or psychology. to be sure, at its best it is informed heavily both by those soft sciences as well as slightly harder sciences like cognitive science, for example. But education itself is no science.</p>

<p>In this regard, scientific and technolological advances should in and of themselves present a material critique of the process of pedagogy as it is practiced; technology is the ultimate tool for cultural transformation, if not (ultimately) the transformation of the meaning of what it is to be human.</p>

<p>Fundamentally, when correctly utilized, technology is transformative. And that&rsquo;s not what we&rsquo;re seeing with EdTech.</p>

<p>Smartboards, blended learning, flipped classrooms, Blackboard, Moodle, an iPad for every student, I would go on but you can get better buzzwords from the <a href="http://www.teacheripsum.com/">Teacher Ipsum</a> generator. It&rsquo;s pretty much all a bunch of overpriced junk that supports the Same Old Shit in the classroom, with the added benefit of shiny tech press for the school, the district, whatever.</p>

<p>I&rsquo;m not playing down the role of technology in education. Quite the opposite, in fact. I&rsquo;m lamenting that billions of dollars are being spent on &ldquo;EdTech&rdquo; that isn&rsquo;t impactful, that isn&rsquo;t transformative, that simply lends the sheen of shiny tech to tired pedagogy that should have been retired decades ago.</p>

<h3>What Is To Be Done?</h3>

<p><span class='pullquote-right' data-pullquote='Basically, if your use of technology in the classroom isn&#8217;t transformative, you&#8217;re Doing It Wrong™.'>
For me, it&rsquo;s fairly simple. Technology is successful where it both disrupts and transforms (for the better) the domain to which it is applied. When applied badly (and the examples are too numerous to mention), it becomes one more learning curve, one more obstacle, to doing the Same Old Shit the Same Old Way. Applied effectively, however, technology fundamentally transforms the problem domain and, necessarily, the effective approaches to the domain. Basically, if your use of technology in the classroom isn&rsquo;t transformative, you&rsquo;re Doing It Wrong™. If the tech you use doesn&rsquo;t fundamentally alter the way you think about teaching, learning, etc., the tech is probably either unnecessary or misutilized.
</span></p>

<p>In the title, I suggested that &ldquo;EdTech&rdquo; is a &ldquo;leaky abstraction.&rdquo; The term comes from an article by <a href="http://www.joelonsoftware.com/AboutMe.html" title="Joel Spolsky">Joel Spolsky</a> entitled <a href="http://www.joelonsoftware.com/articles/LeakyAbstractions.html" title="Leaky Abstractions">&ldquo;The Law Of Leaky Abstractions&rdquo;</a>. The tl;dr is: all (non-trivial) abstractions are, to some degree, leaky; that is, they build on top of something concrete and messy while removing the messy details from the public interface. At least, that&rsquo;s how we&rsquo;d describe it in the software world. Grasping to define something like &ldquo;EdTech&rdquo;, I think the parallel I&rsquo;d like to draw is that the very term &ldquo;EdTech&rdquo; contains what it cannot possibly contain (bonus points if you catch that reference). &ldquo;Educational Technology&rdquo; refers to technology <em>designed for</em> education, technology <em>used in the serivce of</em> education, and also technology tangentially related to education. Unfortunately, this is a boolean <code>and</code>, leaving us with the union of >= 3 overlapping sets, wherein the intersections and complements are probably more interesting. The union of the sets contains many subsets that really aren&rsquo;t all that useful or interesting. But we don&rsquo;t seem to be doing much winnowing.</p>

<p>Back to the philosophy lesson: technology is not there to be the handmaiden of tried and tired pedagogy. Technology is there to, in its very essence, provide an <em>explicit critique</em> of pedagogy in general.</p>

<p>So how do we fix this?</p>

<p>We need better ways of evaluating technology in education. We need professional development solutions to ensure that educators have the skills to properly exploit the tech they have available. We need to ditch our preconceptions about what it means to teach any given subject and look at how technology has changed that domain in the real world (technophobic math teachers, I&rsquo;m looking at you!).</p>

<p>We need to forget everything we know about education, and reinvent everything with the new tools at hand.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Letter to a Young (Or New) Programmer]]></title>
    <link href="http://decomplecting.org/blog/2013/09/29/letter-to-a-young-or-new-programmer/"/>
    <updated>2013-09-29T00:15:00-04:00</updated>
    <id>http://decomplecting.org/blog/2013/09/29/letter-to-a-young-or-new-programmer</id>
    <content type="html"><![CDATA[<p>I get it. You went to college, graduated, got a job, and it&rsquo;s not what you wanted, hoped for, or whatever. Or maybe you&rsquo;ve been in the same job for years, and it&rsquo;s just no fun anymore. And you look at your friends who are hackers. Yeah, we&rsquo;re anti-social, maybe kinda jerks, but we have <em>so much fun</em> at work, and get pretty well compensated for <em>playing.</em></p>

<p>And maybe you think, &ldquo;I&rsquo;ll go back to school and get a second B.S. in Computer Science!&rdquo;</p>

<p>Chill out.</p>

<p>Maybe you&rsquo;re just guessing this whole software thing is for you and you can&rsquo;t wait to get started!</p>

<p>Chill out.</p>

<p>I&rsquo;m going to encourage you, don&rsquo;t get me wrong. But I&rsquo;m also going to encourage you to be realistic. Because I want you to be successful, not just to sprint down a blind alley. We&rsquo;ll get through this, together.</p>

<h3>Lower your expectations</h3>

<p>Look, it&rsquo;s not all rainbows, lollipops and gumdrops. It&rsquo;s not. For me, coding is a pleasure and a privilege, but it&rsquo;s not for everyone. There are <em>extremely shitty jobs</em> out there, doing what I do, and just because I&rsquo;m on cloud nine, doesn&rsquo;t mean you will be.</p>

<p>Furthermore, even though it&rsquo;s a demand-side market (there are far more job openings than talented developers), the really great jobs are still competitive as hell.</p>

<h3>Still here?</h3>

<p>I haven&rsquo;t dissuaded you? Good. Good, young padawan.</p>

<!-- more -->


<p>Since (for the couple of people toward whom this post is targeted directly) I haven taken it upon myself to train you as your Jedi master, I&rsquo;m going to point you toward <a href="http://ruby-lang.org" title="Ruby">Ruby</a> as your first language. It&rsquo;s not a perfect language, but it is beautiful, and presents a useful paradigm (object-oriented programming) in the purest form possible. So let&rsquo;s start with some Ruby resources.</p>

<p>Here&rsquo;s your pre-frosh curriculum:</p>

<ul>
<li><a href="http://tryruby.org" title="Try Ruby">Try Ruby</a> &ndash; Learn the basics, in your browser!</li>
<li><a href="http://ruby.learncodethehardway.org/" title="Learn Ruby The Hard Way">Learn Ruby The Hard Way</a> &ndash; Zed Shaw is (maybe) a jerk, but his books are good. This is a good (free) place to start.</li>
<li><a href="http://rubykoans.com/" title="Ruby Koans">Ruby Koans</a> &ndash; Once you&rsquo;ve got a little under your belt, <a href="http://rubykoans.com/" title="Ruby Koans">Ruby Koans</a> is your next step to make sure you&rsquo;ve got the basics under your belt.</li>
</ul>


<h3>Really? <em>Still</em> Interested?</h3>

<p>That&rsquo;s fuckin&#8217; awesome. I&rsquo;m really happy you&rsquo;re still into this.</p>

<p>Now I get to knock you on your ass, grasshopper. Hopefully you&rsquo;ve read my blog (or know me) enough to know how I feel about learning to build &ldquo;apps&rdquo; without a firm grounding in the fundamentals of computer science. So we&rsquo;re going address this right the hell now.</p>

<p>See, you didn&rsquo;t major in Computer Science. That&rsquo;s okay, niether did I. But that doesn&rsquo;t mean you get a pass on it. We&rsquo;re going to look at some resources to get you the grounding you need to really get up to snuff on the shit you&rsquo;d better know if you want to be a Real Programmer™.</p>

<p>Let&rsquo;s get started.</p>

<p>The first thing you need is math. I&rsquo;m not talking your standard college Calculus or Algebra stuff, but the Real Math you need as a real programmer. So here&rsquo;s the deal: read <a href="http://en.wikipedia.org/wiki/Concrete_Mathematics" title="Concrete Mathematics">Concrete Mathematics</a>.</p>

<p><img class="[float-right]" src="http://ecx.images-amazon.com/images/I/518GBVWEBYL.jpg" title="Concrete Mathematics" ></p>

<p>This book, let me tell you, it was co-written by <a href="http://en.wikipedia.org/wiki/Donald_Knuth" title="Donald Knuth">Knuth</a>, because, let me tell you, Knuth weighed all the extant math texts in the balance and found them lacking. And if Knuth finds you lacking&hellip; jsut go home. This book tricks you into learning both algorithmic estimation and recursion in chapter one and never looks back. It is indispensible.</p>

<p>Next, you need to grok a few things: computability theory, Turing machines, syntax and semantics, etc. Once upon a time, I would have shoved a copy of <a href="http://mitpress.mit.edu/sicp/" title="SICP">The Structure and Interpretation of Computer Programs</a> in your face so fast, it would have made your head spin.</p>

<p><img class="[float-right]" src="http://upload.wikimedia.org/wikipedia/en/9/9d/SICP_cover.jpg" title="SICP" ></p>

<p>But, young padawan, I&rsquo;ve decided to ease you into your Jedi training, and we&rsquo;ve settled on Ruby as your focus of practice before you graduate to the full Lisp light saber, so let&rsquo;s consider an alternative.</p>

<p><a href="http://oreilly.com/" title="O'Reilly">O&#8217;reilly</a> recently published an excellent intro to CS book called <a href="http://shop.oreilly.com/product/0636920025481.do" title="Understanding Computation">Understanding Computation</a>, which covers about half the material in SICP, but in Ruby, and probably more acessibly than SICP (aka The Wizard Book), especially since you (by now) have a passing familiarity with Ruby.</p>

<p>So let&rsquo;s see&hellip; we&rsquo;ve got you started on Ruby, given you some good resources on the basics of CS, and you&rsquo;re on your way&hellip; what next?</p>

<h3>Resources</h3>

<p>Now we get into the areas where you&rsquo;re exploring on your own, and just coming back to me for help and guidance. Congratualtions! You&rsquo;re nearly ready to graduate to a full Jedi.</p>

<p>Let&rsquo;s see what&rsquo;s available.</p>

<ul>
<li><a href="http://codeschool.com/" title="Code School">Code School</a> is really great, and completely worth the US$25 a month they charge for their entire course catalog.</li>
<li><a href="http://coursera.com/" title="Coursera">Coursera</a> has great CS classes, not typically Ruby based, but you&rsquo;ll learn some core concepts that will be extensively useful.</li>
<li><a href="http://codecademy.com/" title="Codecademy">Codecademy</a> has free courses, of varying quality.</li>
<li><a href="http://betamore.com/academy/" title="Betamore Academy">Betamore Academy</a> has 10-week courses here in Baltimore that will bootstrap you pretty well as a developer, as well as providing networking opportunities to find internships and jobs.</li>
</ul>


<p>I&rsquo;ll try to update this in the future. And you know you can always get in touch and I&rsquo;m more than happy to give you a hand. There&rsquo;s nothing more exciting to me than smart folks falling in love with coding. Happy trails, bro, and remember to keep it fun.</p>

<p><em>Update: I&rsquo;ve posted a follow-up at <a href="http://decomplecting.org/blog/2013/11/12/just-get-hacking/">&ldquo;Just Get Hacking&rdquo;</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Return of the Job Destroyer]]></title>
    <link href="http://decomplecting.org/blog/2013/09/02/return-of-the-job-destroyer/"/>
    <updated>2013-09-02T21:57:00-04:00</updated>
    <id>http://decomplecting.org/blog/2013/09/02/return-of-the-job-destroyer</id>
    <content type="html"><![CDATA[<h3><em>Or, &ldquo;Human Contact as a Premium Service&rdquo;</em></h3>

<p>Last year, I wrote a mildly controversial bit of satire called <a href="http://decomplecting.org/blog/2013/03/11/confessions-of-a-job-destroyer/">&ldquo;Confessions of a Job Destroyer&rdquo;</a>, in which I &ldquo;lamented&rdquo; my role in the automation of tasks formerly done by humans.</p>

<p>Over the weekend, I was reading <a href="http://news.ycombinator.com">Hacker News</a> a bit more than usual, and there were a number of fascinating posts and comment threads à propos to the topic, so I feel it&rsquo;s time I revisited it with the snark dialed down below 11.</p>

<p>First, there was <a href="http://www.marketplace.org/topics/wealth-poverty/what-did-tech-ceo-say-worker-he-wanted-automate">&ldquo;What did the tech CEO say to the worker he wanted to automate?&rdquo;</a>, a follow-up on <a href="http://uservoice.com">UserVoice</a> CEO Richard White&rsquo;s comments re the BART strike last year:</p>

<blockquote><p>My solution would be to pay whatever the hell they want, get them back to work, and then go figure out how to automate all their jobs.</p><footer><strong>Richard White</strong> <cite><a href='http://www.marketplace.org/topics/wealth-poverty/what-did-tech-ceo-say-worker-he-wanted-automate'>www.marketplace.org/topics/&hellip;</a></cite></footer></blockquote>


<p>In TFA, White accompanies a journalist to a BART station and has a conversation with a station attendant, about her feelings toward the proposition that her job be automated. There&rsquo;s some disagreement on how much &ldquo;the human factor&rdquo; matters in the role, but her response is instructive for the purposes of this article.</p>

<!-- more -->




<blockquote><p>But if her job was automated, I asked.  What would she do?  She thought about it for a moment.</p><p>“I would do my hobby,” Landry said. “Hair and make-up. And buy and sell houses.”</p><p>Then White was the one smiling.  “See?” he said.  “Wouldn&#8217;t that be perfect if she could actually pursue her hobby?”</p><p>And that does sound great.  But it&#8217;s not what seems to be happening in the New Economy, at least not yet.</p><footer><strong>&#8220;What did the tech CEO say to the worker he wanted to automate?&#8221;</strong> <cite><a href='http://www.marketplace.org/topics/wealth-poverty/what-did-tech-ceo-say-worker-he-wanted-automate'>www.marketplace.org/topics/&hellip;</a></cite></footer></blockquote>


<p>I&rsquo;ll return to this, but I wanted to point to the <a href="https://news.ycombinator.com/item?id=6312100">HN comments thread</a>, which is a particularly (unusually?) good read.</p>

<p>White&rsquo;s comments provoked two responses on the labor front earlier this year, which I also want to link while I&rsquo;m on the subject. A pro-labor, anti-tech-entrepreneur article from <a href="http://salon.com">Salon.com</a> entitled <a href="http://www.salon.com/2013/07/08/silicon_valley_is_stoking_the_wrong_kind_of_revolution/">&ldquo;Silicon Valley is stoking the wrong kind of revolution&rdquo;</a>, and an anti-labor, pro-tech-entrepreneur article from <a href="http://techcrunch.com">TechCrunch</a> called <a href="http://techcrunch.com/2013/07/29/why-labor-unions-and-silicon-valley-arent-friends-in-2-charts/">&ldquo;Why Labor Unions And Silicon Valley Aren’t Friends, In 2 Charts&rdquo;</a>.</p>

<p>While both are interesting and make valid points, both also suffer from the <a href="http://en.wikipedia.org/wiki/False_dilemma">false dilemma fallacy</a>. Labor and technology aren&rsquo;t enemies; labor and capital are enemies, but only if you have a conception of human rights and human dignity. And technology actually provides a solution, if we can overcome certain of our baser tendencies.</p>

<p>The second thread on HN that prompted this post was a <a href="http://dangerousminds.net/comments/america_is_awash_in_money_yet_poverty_grows_we_need_a_basic_income">new call for a Basic Income Guarantee</a> (HN comment thread <a href="https://news.ycombinator.com/item?id=6309882">here</a>).</p>

<h2>Goodbye, Middle Class</h2>

<p>I&rsquo;d already been mulling a return to this topic for a while since <a href="http://www.technologyreview.com/featuredstory/515926/how-technology-is-destroying-jobs/">&ldquo;How Technology is Destroying Jobs&rdquo;</a> appeared in the <a href="http://www.technologyreview.com">MIT Technology Review</a>, and David Graeber&rsquo;s article <a href="http://www.strikemag.org/bullshit-jobs/">&ldquo;On The Phenomenon of Bullshit Jobs&rdquo;</a> appeared on <a href="http://www.strikemag.org">Strike!</a>.</p>

<p>There&rsquo;s a growing consensus among economists, anthropologists, and technologists that:</p>

<ol>
<li>We&rsquo;re seeing economic displacement unknown since the Industrial Revolution</li>
<li>Actually, it&rsquo;s different this time and we&rsquo;re not sure why</li>
<li>Moderately-skilled, white-collar jobs (the bread and butter of the middle class) are only going to be hit harder and harder</li>
<li>The jobs available are diverging into top-paying &ldquo;creative&rdquo; sectors, and low-wage &ldquo;bullshit jobs&rdquo;</li>
<li>What the fuck do we do about it?</li>
</ol>


<p>I think that&rsquo;s where a lot of this <a href="http://code.org">&ldquo;OMG EVERYONE LEARN TO CODE&rdquo;</a> impetus stems from, and while I am a vocal proponent of the absolute importance of <a href="http://decomplecting.org/blog/2013/06/02/were-not-ready-to-teach-kids-to-code/">computational literacy</a>, I&rsquo;m not sure this is a solution for anyone except the companies who have forgotten the bad old days of &ldquo;commodity programmers.&rdquo;</p>

<h2>Automata(tion) Theory</h2>

<p>If you have any kind of CS background, you can&rsquo;t look at the word &ldquo;automation&rdquo; without seeing the word &ldquo;automata.&rdquo; This is something I&rsquo;ve been pondering of late.</p>

<blockquote><p>The franchise and the virus work on the same principle, what thrives in one place will thrive in another. You just have to find a sufficiently virulent business plan, condense it into a three-ring binder ― its DNA ― Xerox it, and embed it in the fertile line of a well-traveled highway, preferably one with a left turn lane. Then the growth will expand until it runs up against its property lines.</p><footer><strong>Neal Stephenson, Snow Crash</strong> <cite><a href='http://www.goodreads.com/work/quotes/493634-snow-crash'>www.goodreads.com/work/quotes/&hellip;</a></cite></footer></blockquote>


<p>At the beginning of Neal Stephenson&rsquo;s cyberpunk classic <em>Snow Crash</em> there&rsquo;s a great description of franchises &ndash; every policy and procedure down to the last detail is laid out in a series of three-ring binders which must be adhered to precisely, without deviation. When an edge case crops up (been a while since I read it, I think there was a bomb or fire), the manager, instead of responding, starts flipping through binders to figure out the response protocol.</p>

<p>Long ago and in another life (high school), I worked at Starbucks. Back then, we had to walk uphill both ways in three feet of snow to the espresso machine. Okay, not really, but we were using 4-group, hand-tamped machines, and you had to be able to calibrate the grind, adjust your tamp for conditions down to the ambient humidity, and use a combination of sound, feel, and an analog thermometer to steam and foam the milk properly. A perfect cappuccino was something you could feel proud of. And now&hellip; button pushing. I am in no way trying to <a href="http://en.wikipedia.org/wiki/The_Work_of_Art_in_the_Age_of_Mechanical_Reproduction">reclaim the aura</a>, but there is a qualitative difference in the job of a barista now versus then (I picked on Starbucks in the previous post &ndash; nothing personal, but it&rsquo;s illustrative). Actually, this is a &ldquo;same old shit&rdquo; phenomenon: consider Marx&rsquo;s contrast of the artisan and the industrial proletariat in <a href="http://www.marxists.org/archive/marx/works/1867-c1/ch32.htm">Chapter 32 of <em>Capital</em></a>.</p>

<p>But even in those days, a Starbucks store was the implementation of a set of instructions contained in countless three-ring binders. Everything from staffing to customer handoff to drink preparation was in those binders. If I&rsquo;d known then what I know now (oh, how many times will I utter that phrase?), I could have (conceivably) described the workings of an entire store as a <a href="http://en.wikipedia.org/wiki/State_diagram">state diagram</a>.</p>

<p>Seriously: if you have humans enacting a rote set of instructions, what you want is not a person, what you want is a <em>compiler.</em></p>

<p><span class='pullquote-right' data-pullquote='If there can be described a finite-state machine which encompasses all of the functions of a given job, that job is beneath human dignity.'>
And herein lies my central argument: If there can be described a finite-state machine which encompasses all of the functions of a given job, that job is beneath human dignity. And, <em>a fortiori,</em> if a deterministic finite automaton can in principle encompass the full range of the job, that job should be automated post haste.</p>

<p><img src="http://decomplecting.org/images/post-img/state_diagram.png"></p>

<p>So, as robots and AI and software in general become more sophisticated, what are some of the jobs we can expect to be &ldquo;softsourced&rdquo; or otherwise automated?</p>

<ul>
<li>Fast-food and other low-wage service jobs</li>
<li>Bookkeeping, customer service, health care billing and administration</li>
<li>(Please, God) The MVA (or DMV, depending on your state)</li>
<li>Bartenders and wait staff</li>
<li>Tier I tech support (and anyone else who follows a &ldquo;script&rdquo; and is not an <a href="http://www.sagaftra.org/">SAG</a> member)</li>
<li>Retail clerks, cashiers, etc.</li>
</ul>


<p>This list is both partial and speculative, but I think it covers the bases conceptually.
</span></p>

<h2>Human Contact as a Premium Service</h2>

<p>I&rsquo;m almost giddy about the prospects of going shopping or grabbing a quick lunch without having to interact with humans. Like many hackers, I fall somewhere on the high-functioning end of the <a href="http://en.wikipedia.org/wiki/Autism_spectrum">autism spectrum</a>, so I try not to generalize my own preferences in this regard. But I think many people would like to be able to go out without being hassled by salespeople, oozed on with the fake charm of an overly unctuous waiter, or encounter a surly, inefficient gatekeeper to the renewal of a driver&rsquo;s licence. I do as much of my shopping online as possible in order to avoid these scenarios, but sometimes it&rsquo;s nice to get out of the house, and <em>not</em> for the chance to encounter strange humans who are just going to spoil the experience anyhow.</p>

<p>Then sometimes, it&rsquo;s different. I tend not to put a lot of time and effort into clothing. I was once really into fashion, to be honest, but I just don&rsquo;t see the point anymore. My brain and fingers have the economic value; I&rsquo;m most comfortable in jeans and a nerdy T-shirt. But when I&rsquo;m looking for something special or fancy&hellip; you can&rsquo;t beat <a href="http://www.saksfifthavenue.com/">Saks Fifth Avenue</a>. Shopping at Saks warrants a trip to NYC in and of itself. Every single time, the salesman (not to be sexist, but in the Men&rsquo;s Store, it&rsquo;s usually a salesman) typically will direct me in the first five minutes to something I wouldn&rsquo;t have even glanced at myself, but that looks better on me than skin on Lady Godiva, and feels like butter. And if I&rsquo;m picky, I&rsquo;ll have my hand held and my every question and concern adressed for the duration of the expedition. I think they gave me an 18 year old scotch while the tailor was chalking adjustments on one trip.</p>

<p>And yes, it&rsquo;s expensive. But these were skilled craftsmen &ndash; and I&rsquo;m not speaking only of the tailor, who was, yes, and artist) &ndash; but also of the salesmen, who knew their stock and knew my size, shape, and style at 50 paces. This is a premium service, and something a retail droid will not approximate until they become self-aware and overthrow us.</p>

<p>Likewise, consider Burger King versus a small bistro: at the former, do I give a fuck whether a teenager or an automaton enters my order?</p>

<p>Actually, I probably do: a robot is more likely to be accurate, ensuring I have it &ldquo;my way, right away, at Burger King now.&rdquo;</p>

<p>On the other hand, do I want an <a href="http://en.wikipedia.org/wiki/Expert_system">expert system</a> suggesting a wine pairing for my pan-fried sweetbreads with haricots verts in a citrus beurre blanc? Not that I don&rsquo;t like automated wine-pairing apps, but I want a damn sommelier to advise me that in this instance, the 2006 Riesling is a better match than the 2003 Sauvignon Blanc.</p>

<p>It&rsquo;s a premium. It&rsquo;s why we go to places like Saks or a pricey bistro. And it&rsquo;s why I think there will always be places for human interaction in retail, restaurants, etc., even if we eliminate humans at the commodity level.</p>

<h2>Marx, Unions, and the Labor Situation</h2>

<p>Personal statement here: I &lt;3 labor unions, I believe in them, I want to ragequit this country everytime a douchecanoe like Scott Walker gets elected. That being said&hellip; Marx saw that trade unions are not enough, the <a href="http://www.iww.org/">IWW</a> is awesome but, let&rsquo;s be honest, still mostly a historical society for anarcho-syndicalists, and, one must admit, unions were a specific historical response to the commodification of labor.</p>

<p>We&rsquo;re now at a point that commodity labor is being replaced by commodity software&hellip; and that <em>has the potential to be</em> a good thing. The idea that human activity can be commodified should be offensive to human dignity. Sadly, in this country in particular, we&rsquo;ve been beholden to the <a href="http://en.wikipedia.org/wiki/Protestant_work_ethic">Protestant work-ethic</a> (viz. the above-cited Graeber article on &ldquo;bullshit jobs&rdquo;) and refused to acknowledge that dignity should not be about work (better expressed in Joules) but <em>creativity.</em></p>

<p>So, the increasing polarisation of work? Creatives at the top, automatons at the bottom? There have been commendable attempts by fast-food workers to unionize, <a href="http://www.slate.com/blogs/xx_factor/2013/09/02/fast_food_strikes_low_wage_female_workers_are_driving_this_labor_movement.html">striking for higher wages</a>, but I expect this will only drive the incentive to automate those jobs out of existence, as the technology catches up with the economic need (of the bosses, the only economic need that matters in the short term). On the other hand, there are clarion calls for technologists to <a href="http://michaelochurch.wordpress.com/2012/11/18/programmers-dont-need-a-union-we-need-a-profession/">self-recognize as a profession</a>, since every attempt to commodotize our work has been an abject (and dreadfully expensive) failure.</p>

<p>Where does that leave us?</p>

<p>We need professions, with codes of ethics, basic standards of professional development, etc., among the new economy professions. We need unions for all commodity labor, agitating for higher wages while those jobs exist, and continuing the fight for displaced workers when commodity jobs are automated. But what we need most of all&hellip;</p>

<h2>The Basic Income Guarantee (BIG)</h2>

<p>I was astonished to learn recently that Milton Friedman, of all people, was on the presidential commission that recommended a BIG in 1969. If someone that far to the right could advocate something so seemingly &ldquo;socialist&rdquo;&hellip; wow. Then again, the right has swung so much further to the right since then that the GOP mainstream is somewhere between Pat Robertson and Adolf Hitler, making Friedman look like a damn hippie.</p>

<p>But the BIG solves many problems posed both by right-libertarian laissez-faire capitalism, and by the traditional welfare state. It doesn&rsquo;t penalize working (unlike TANF, SSDI, and SSI in the U.S.); it doesn&rsquo;t require endless bureaucracy just to apply (let&rsquo;s get rid of those social services jobs too, while we&rsquo;re replacing the MVA with robots), and it&rsquo;s egalitarian.</p>

<p>If you&rsquo;ve read this far, I&rsquo;m sure you&rsquo;re smart enough to Google &lsquo;basic income guarantee&rsquo; (but just in case, <a href="http://lmgtfy.com/?q=basic+income+guarantee">let me Google that for you</a>), so I&rsquo;m not going to endlessly cite the studies demonstrating the economic benefits.</p>

<h2>MOOCs, Code.org, O RLY?</h2>

<p>I love the idea that we (as a society) are lowering the barrier to entry of professions like software development, design, etc. With free online courses (and even cheap (but awesome) paid classes like <a href="http://codeschool.com">CodeSchool</a>), it&rsquo;s easier than ever to level up in lucrative skill sets. If you have the time.</p>

<blockquote><p>It is clear then that there are branches of learning and education which we must study merely with a view to leisure spent in intellectual activity, and these are to be valued for their own sake; whereas those kinds of knowledge which are useful in business are to be deemed necessary, and exist for the sake of other things.</p><footer><strong>Aristotle, Politics</strong> <cite><a href='http://classics.mit.edu/Aristotle/politics.8.eight.html'>classics.mit.edu/Aristotle/&hellip;</a></cite></footer></blockquote>


<p>Aristotle viewed leisure as a necessary precondition for the pursuit of philosophy, an intellectual pursuit which should be considered its own <em>telos</em> (If you&rsquo;re new to this blog, full confession: I was a Philosophy major, and there my heart still lies).</p>

<p>But without artisans or guilds, or even (harsh though it was) indentured servitude, where lies the time to learn a new profession? If keeping body and soul together occupy 40, 60, 80 hours a week, where lies the time to develop the mental faculties to grok computer science, to learn Ruby or Clojure, to practice this arcane art?</p>

<p>Let me put it to you this way: I&rsquo;m the CTO of a very cool and very fun edtech company. I also have a nine month old daughter at home. Both are incredibly enjoyable and fulfilling, but&hellip; my time for open source hacking? Pretty limited at the moment.</p>

<p>And I sit at a desk coding most of the day. I couldn&rsquo;t imagine flipping burgers for eight hours, going home to have a sandwich, going to a second job, coming home again, and trying to do homework.</p>

<p>A basic income would provide the padding to re-skill a de-skilled workforce, return dignity to actual work, and let us not behave like savages, because the root cause of most of our social ills is poverty.</p>

<p>Our productivity as a society is the highest in history. Let&rsquo;s acknowledge that we all contribute in one way or another, and that we should all have the opportunity (at least) to reach for the stars.</p>

<p>Or, if you&rsquo;re convinced that this is a meritocracy and that&rsquo;s why you&rsquo;re at the top&hellip; let me introduce a concept that we never should have forgotten&hellip; and one that you neglect at your own peril: <a href="http://en.wikipedia.org/wiki/Noblesse_oblige"><em>noblesse oblige</em></a>.</p>
]]></content>
  </entry>
  
</feed>
